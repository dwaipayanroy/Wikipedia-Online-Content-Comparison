#ifndef org_apache_lucene_util_QueryBuilder_H
#define org_apache_lucene_util_QueryBuilder_H

#include "java/lang/Object.h"

namespace java {
  namespace lang {
    class String;
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        class Query;
        class BooleanClause$Occur;
      }
      namespace analysis {
        class Analyzer;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {

        class QueryBuilder : public ::java::lang::Object {
         public:
          enum {
            mid_init$_7721dccf023a326e,
            mid_createBooleanQuery_51bf4fead0eff4e9,
            mid_createBooleanQuery_60f3ee15ceb494fb,
            mid_createMinShouldMatchQuery_45f44e003986e934,
            mid_createPhraseQuery_51bf4fead0eff4e9,
            mid_createPhraseQuery_a4c59fe6dc02a166,
            mid_getAnalyzer_231d561a717101b1,
            mid_getAutoGenerateMultiTermSynonymsPhraseQuery_b61c635e27ed4ce7,
            mid_getEnableGraphQueries_b61c635e27ed4ce7,
            mid_getEnablePositionIncrements_b61c635e27ed4ce7,
            mid_setAnalyzer_7721dccf023a326e,
            mid_setAutoGenerateMultiTermSynonymsPhraseQuery_cfd4ba314e3c83fb,
            mid_setEnableGraphQueries_cfd4ba314e3c83fb,
            mid_setEnablePositionIncrements_cfd4ba314e3c83fb,
            mid_newBooleanQuery_14b2a1ebb766e482,
            mid_createFieldQuery_8198f90d7030499a,
            mid_createFieldQuery_ed7e70d014767500,
            mid_createSpanQuery_f63dae91642f8fcb,
            mid_analyzeTerm_c3382c5e177f8615,
            mid_analyzeBoolean_c3382c5e177f8615,
            mid_analyzeMultiBoolean_262aa871dfc05a09,
            mid_analyzePhrase_1707183f092c1cf2,
            mid_analyzeMultiPhrase_1707183f092c1cf2,
            mid_analyzeGraphBoolean_262aa871dfc05a09,
            mid_analyzeGraphPhrase_4d2f296023c6a160,
            mid_newSynonymQuery_2405238c8889304c,
            mid_newGraphSynonymQuery_78056fcc0023b48b,
            mid_newTermQuery_79ca9b77bb4d3255,
            mid_newMultiPhraseQueryBuilder_03f57feaea5e36f2,
            mid_add_df0a8ae9ecbd052e,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit QueryBuilder(jobject obj) : ::java::lang::Object(obj) {
            if (obj != NULL && mids$ == NULL)
              env->getClass(initializeClass);
          }
          QueryBuilder(const QueryBuilder& obj) : ::java::lang::Object(obj) {}

          QueryBuilder(const ::org::apache::lucene::analysis::Analyzer &);

          ::org::apache::lucene::search::Query createBooleanQuery(const ::java::lang::String &, const ::java::lang::String &) const;
          ::org::apache::lucene::search::Query createBooleanQuery(const ::java::lang::String &, const ::java::lang::String &, const ::org::apache::lucene::search::BooleanClause$Occur &) const;
          ::org::apache::lucene::search::Query createMinShouldMatchQuery(const ::java::lang::String &, const ::java::lang::String &, jfloat) const;
          ::org::apache::lucene::search::Query createPhraseQuery(const ::java::lang::String &, const ::java::lang::String &) const;
          ::org::apache::lucene::search::Query createPhraseQuery(const ::java::lang::String &, const ::java::lang::String &, jint) const;
          ::org::apache::lucene::analysis::Analyzer getAnalyzer() const;
          jboolean getAutoGenerateMultiTermSynonymsPhraseQuery() const;
          jboolean getEnableGraphQueries() const;
          jboolean getEnablePositionIncrements() const;
          void setAnalyzer(const ::org::apache::lucene::analysis::Analyzer &) const;
          void setAutoGenerateMultiTermSynonymsPhraseQuery(jboolean) const;
          void setEnableGraphQueries(jboolean) const;
          void setEnablePositionIncrements(jboolean) const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        extern PyType_Def PY_TYPE_DEF(QueryBuilder);
        extern PyTypeObject *PY_TYPE(QueryBuilder);

        class t_QueryBuilder {
        public:
          PyObject_HEAD
          QueryBuilder object;
          static PyObject *wrap_Object(const QueryBuilder&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
