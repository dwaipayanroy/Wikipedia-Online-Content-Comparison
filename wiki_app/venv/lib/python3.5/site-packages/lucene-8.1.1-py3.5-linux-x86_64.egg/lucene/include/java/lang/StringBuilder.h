#ifndef java_lang_StringBuilder_H
#define java_lang_StringBuilder_H

#include "java/lang/AbstractStringBuilder.h"

namespace java {
  namespace io {
    class Serializable;
  }
  namespace lang {
    class StringBuilder;
    class Object;
    class String;
    class CharSequence;
    class StringBuffer;
    class Class;
  }
}
template<class T> class JArray;

namespace java {
  namespace lang {

    class StringBuilder : public ::java::lang::AbstractStringBuilder {
     public:
      enum {
        mid_init$_8e1955e8a9db094a,
        mid_init$_f23cb8ed8bef391c,
        mid_init$_36df8fa8e39fb5cc,
        mid_init$_16a385b5c9ec001b,
        mid_append_06fafea636f57675,
        mid_append_606aff1876349487,
        mid_append_2ec2f1764576a091,
        mid_append_c9039573875488e7,
        mid_append_1f75d83dac4edfa5,
        mid_append_c9d0474c04f3b92c,
        mid_append_a6720492ba7e73f9,
        mid_append_60708a9aee5a3274,
        mid_append_8603d0f101c9f4be,
        mid_append_ce4d2ced64c59c0c,
        mid_append_d4f84a56ba632ef7,
        mid_append_b2fa8523e63b2276,
        mid_append_d59be19b36ca259e,
        mid_appendCodePoint_60708a9aee5a3274,
        mid_delete_cd0339aac5a8823a,
        mid_deleteCharAt_60708a9aee5a3274,
        mid_indexOf_354c0569c95d5178,
        mid_indexOf_7b98af938793e116,
        mid_insert_dec63b83879f1f5c,
        mid_insert_82cc954c4726825f,
        mid_insert_670b330b70801daf,
        mid_insert_7f742a700aff26cd,
        mid_insert_09e3ef5f9fc13063,
        mid_insert_7ebe52a06856748a,
        mid_insert_cd0339aac5a8823a,
        mid_insert_6821679ea71b644c,
        mid_insert_46ce7de8731a2057,
        mid_insert_34a509ebede5a00b,
        mid_insert_3f5bb1c11023c8c7,
        mid_insert_f371ec3881fd7f34,
        mid_lastIndexOf_354c0569c95d5178,
        mid_lastIndexOf_7b98af938793e116,
        mid_replace_bab6e7fd28a23b99,
        mid_reverse_1642ece4c0c6b3fe,
        mid_toString_a59eabb26a802fa9,
        max_mid
      };

      static ::java::lang::Class *class$;
      static jmethodID *mids$;
      static bool live$;
      static jclass initializeClass(bool);

      explicit StringBuilder(jobject obj) : ::java::lang::AbstractStringBuilder(obj) {
        if (obj != NULL && mids$ == NULL)
          env->getClass(initializeClass);
      }
      StringBuilder(const StringBuilder& obj) : ::java::lang::AbstractStringBuilder(obj) {}

      StringBuilder();
      StringBuilder(const ::java::lang::String &);
      StringBuilder(jint);
      StringBuilder(const ::java::lang::CharSequence &);

      StringBuilder append(const ::java::lang::StringBuffer &) const;
      StringBuilder append(const JArray< jchar > &) const;
      StringBuilder append(const ::java::lang::String &) const;
      StringBuilder append(jboolean) const;
      StringBuilder append(jchar) const;
      StringBuilder append(jdouble) const;
      StringBuilder append(jfloat) const;
      StringBuilder append(jint) const;
      StringBuilder append(const ::java::lang::CharSequence &) const;
      StringBuilder append(const ::java::lang::Object &) const;
      StringBuilder append(jlong) const;
      StringBuilder append(const JArray< jchar > &, jint, jint) const;
      StringBuilder append(const ::java::lang::CharSequence &, jint, jint) const;
      StringBuilder appendCodePoint(jint) const;
      StringBuilder delete$(jint, jint) const;
      StringBuilder deleteCharAt(jint) const;
      jint indexOf(const ::java::lang::String &) const;
      jint indexOf(const ::java::lang::String &, jint) const;
      StringBuilder insert(jint, const JArray< jchar > &) const;
      StringBuilder insert(jint, const ::java::lang::String &) const;
      StringBuilder insert(jint, jboolean) const;
      StringBuilder insert(jint, jchar) const;
      StringBuilder insert(jint, jdouble) const;
      StringBuilder insert(jint, jfloat) const;
      StringBuilder insert(jint, jint) const;
      StringBuilder insert(jint, const ::java::lang::CharSequence &) const;
      StringBuilder insert(jint, const ::java::lang::Object &) const;
      StringBuilder insert(jint, jlong) const;
      StringBuilder insert(jint, const JArray< jchar > &, jint, jint) const;
      StringBuilder insert(jint, const ::java::lang::CharSequence &, jint, jint) const;
      jint lastIndexOf(const ::java::lang::String &) const;
      jint lastIndexOf(const ::java::lang::String &, jint) const;
      StringBuilder replace(jint, jint, const ::java::lang::String &) const;
      StringBuilder reverse() const;
      ::java::lang::String toString() const;
    };
  }
}

#include <Python.h>

namespace java {
  namespace lang {
    extern PyType_Def PY_TYPE_DEF(StringBuilder);
    extern PyTypeObject *PY_TYPE(StringBuilder);

    class t_StringBuilder {
    public:
      PyObject_HEAD
      StringBuilder object;
      static PyObject *wrap_Object(const StringBuilder&);
      static PyObject *wrap_jobject(const jobject&);
      static void install(PyObject *module);
      static void initialize(PyObject *module);
    };
  }
}

#endif
