#ifndef org_apache_lucene_document_LatLonShape_H
#define org_apache_lucene_document_LatLonShape_H

#include "java/lang/Object.h"

namespace java {
  namespace lang {
    class String;
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace geo {
        class Line;
        class Polygon;
      }
      namespace document {
        class LatLonShape$QueryRelation;
        class Field;
      }
      namespace search {
        class Query;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace document {

        class LatLonShape : public ::java::lang::Object {
         public:
          enum {
            mid_createIndexableFields_3d63a51b1ac154d1,
            mid_createIndexableFields_45b1579f867015eb,
            mid_createIndexableFields_62858bea25299eef,
            mid_decodeTriangle_f9e817514af62b8b,
            mid_encodeTriangle_ccb4bb7d81a7bf26,
            mid_newBoxQuery_6d1abcc6440f7a6e,
            mid_newLineQuery_b2091e34a190ea38,
            mid_newPolygonQuery_820867e4103e2b47,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit LatLonShape(jobject obj) : ::java::lang::Object(obj) {
            if (obj != NULL && mids$ == NULL)
              env->getClass(initializeClass);
          }
          LatLonShape(const LatLonShape& obj) : ::java::lang::Object(obj) {}

          static JArray< ::org::apache::lucene::document::Field > createIndexableFields(const ::java::lang::String &, const ::org::apache::lucene::geo::Line &);
          static JArray< ::org::apache::lucene::document::Field > createIndexableFields(const ::java::lang::String &, const ::org::apache::lucene::geo::Polygon &);
          static JArray< ::org::apache::lucene::document::Field > createIndexableFields(const ::java::lang::String &, jdouble, jdouble);
          static void decodeTriangle(const JArray< jbyte > &, const JArray< jint > &);
          static void encodeTriangle(const JArray< jbyte > &, jint, jint, jint, jint, jint, jint);
          static ::org::apache::lucene::search::Query newBoxQuery(const ::java::lang::String &, const ::org::apache::lucene::document::LatLonShape$QueryRelation &, jdouble, jdouble, jdouble, jdouble);
          static ::org::apache::lucene::search::Query newLineQuery(const ::java::lang::String &, const ::org::apache::lucene::document::LatLonShape$QueryRelation &, const JArray< ::org::apache::lucene::geo::Line > &);
          static ::org::apache::lucene::search::Query newPolygonQuery(const ::java::lang::String &, const ::org::apache::lucene::document::LatLonShape$QueryRelation &, const JArray< ::org::apache::lucene::geo::Polygon > &);
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace document {
        extern PyType_Def PY_TYPE_DEF(LatLonShape);
        extern PyTypeObject *PY_TYPE(LatLonShape);

        class t_LatLonShape {
        public:
          PyObject_HEAD
          LatLonShape object;
          static PyObject *wrap_Object(const LatLonShape&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
