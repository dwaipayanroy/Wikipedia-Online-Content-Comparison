#ifndef java_lang_Integer_H
#define java_lang_Integer_H

#include "java/lang/Number.h"

namespace java {
  namespace lang {
    class Object;
    class Comparable;
    class String;
    class NumberFormatException;
    class Integer;
    class Class;
  }
}
template<class T> class JArray;

namespace java {
  namespace lang {

    class Integer : public ::java::lang::Number {
     public:
      enum {
        mid_init$_f23cb8ed8bef391c,
        mid_init$_36df8fa8e39fb5cc,
        mid_bitCount_31c387e1be87ebd7,
        mid_byteValue_05e841c8d0c07537,
        mid_compare_28fd57ae44f76a2e,
        mid_compareTo_0fd3209e4a73e39b,
        mid_compareUnsigned_28fd57ae44f76a2e,
        mid_decode_4d5e19d8a71e4f06,
        mid_divideUnsigned_28fd57ae44f76a2e,
        mid_doubleValue_dbe9ce177340961e,
        mid_equals_95c645439e1de637,
        mid_floatValue_9c0456e344056ea9,
        mid_getInteger_4d5e19d8a71e4f06,
        mid_getInteger_919ff89ac13e8005,
        mid_getInteger_0b9a0e857da6a4d1,
        mid_hashCode_ebe7ab370a509c13,
        mid_hashCode_31c387e1be87ebd7,
        mid_highestOneBit_31c387e1be87ebd7,
        mid_intValue_ebe7ab370a509c13,
        mid_longValue_e0866fd7ad03cc05,
        mid_lowestOneBit_31c387e1be87ebd7,
        mid_max_28fd57ae44f76a2e,
        mid_min_28fd57ae44f76a2e,
        mid_numberOfLeadingZeros_31c387e1be87ebd7,
        mid_numberOfTrailingZeros_31c387e1be87ebd7,
        mid_parseInt_354c0569c95d5178,
        mid_parseInt_7b98af938793e116,
        mid_parseUnsignedInt_354c0569c95d5178,
        mid_parseUnsignedInt_7b98af938793e116,
        mid_remainderUnsigned_28fd57ae44f76a2e,
        mid_reverse_31c387e1be87ebd7,
        mid_reverseBytes_31c387e1be87ebd7,
        mid_rotateLeft_28fd57ae44f76a2e,
        mid_rotateRight_28fd57ae44f76a2e,
        mid_shortValue_ca93f121c262a7d3,
        mid_signum_31c387e1be87ebd7,
        mid_sum_28fd57ae44f76a2e,
        mid_toBinaryString_051f7871497adf6a,
        mid_toHexString_051f7871497adf6a,
        mid_toOctalString_051f7871497adf6a,
        mid_toString_a59eabb26a802fa9,
        mid_toString_051f7871497adf6a,
        mid_toString_d1f393259271740d,
        mid_toUnsignedLong_8c6211afaf19d833,
        mid_toUnsignedString_051f7871497adf6a,
        mid_toUnsignedString_d1f393259271740d,
        mid_valueOf_4d5e19d8a71e4f06,
        mid_valueOf_36fe27ec6698eea0,
        mid_valueOf_0b9a0e857da6a4d1,
        max_mid
      };

      static ::java::lang::Class *class$;
      static jmethodID *mids$;
      static bool live$;
      static jclass initializeClass(bool);

      explicit Integer(jobject obj) : ::java::lang::Number(obj) {
        if (obj != NULL && mids$ == NULL)
          env->getClass(initializeClass);
      }
      Integer(const Integer& obj) : ::java::lang::Number(obj) {}

      static jint BYTES;
      static jint MAX_VALUE;
      static jint MIN_VALUE;
      static jint SIZE;
      static ::java::lang::Class *TYPE;

      Integer(const ::java::lang::String &);
      Integer(jint);

      static jint bitCount(jint);
      jbyte byteValue() const;
      static jint compare(jint, jint);
      jint compareTo(const Integer &) const;
      static jint compareUnsigned(jint, jint);
      static Integer decode(const ::java::lang::String &);
      static jint divideUnsigned(jint, jint);
      jdouble doubleValue() const;
      jboolean equals(const ::java::lang::Object &) const;
      jfloat floatValue() const;
      static Integer getInteger(const ::java::lang::String &);
      static Integer getInteger(const ::java::lang::String &, const Integer &);
      static Integer getInteger(const ::java::lang::String &, jint);
      jint hashCode() const;
      static jint hashCode(jint);
      static jint highestOneBit(jint);
      jint intValue() const;
      jlong longValue() const;
      static jint lowestOneBit(jint);
      static jint max$(jint, jint);
      static jint min$(jint, jint);
      static jint numberOfLeadingZeros(jint);
      static jint numberOfTrailingZeros(jint);
      static jint parseInt(const ::java::lang::String &);
      static jint parseInt(const ::java::lang::String &, jint);
      static jint parseUnsignedInt(const ::java::lang::String &);
      static jint parseUnsignedInt(const ::java::lang::String &, jint);
      static jint remainderUnsigned(jint, jint);
      static jint reverse(jint);
      static jint reverseBytes(jint);
      static jint rotateLeft(jint, jint);
      static jint rotateRight(jint, jint);
      jshort shortValue() const;
      static jint signum(jint);
      static jint sum(jint, jint);
      static ::java::lang::String toBinaryString(jint);
      static ::java::lang::String toHexString(jint);
      static ::java::lang::String toOctalString(jint);
      ::java::lang::String toString() const;
      static ::java::lang::String toString(jint);
      static ::java::lang::String toString(jint, jint);
      static jlong toUnsignedLong(jint);
      static ::java::lang::String toUnsignedString(jint);
      static ::java::lang::String toUnsignedString(jint, jint);
      static Integer valueOf(const ::java::lang::String &);
      static Integer valueOf(jint);
      static Integer valueOf(const ::java::lang::String &, jint);
    };
  }
}

#include <Python.h>

namespace java {
  namespace lang {
    extern PyType_Def PY_TYPE_DEF(Integer);
    extern PyTypeObject *PY_TYPE(Integer);

    class t_Integer {
    public:
      PyObject_HEAD
      Integer object;
      static PyObject *wrap_Object(const Integer&);
      static PyObject *wrap_jobject(const jobject&);
      static void install(PyObject *module);
      static void initialize(PyObject *module);
    };
  }
}

#endif
