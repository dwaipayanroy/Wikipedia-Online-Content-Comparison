#ifndef org_apache_lucene_spatial3d_geom_SerializableObject_H
#define org_apache_lucene_spatial3d_geom_SerializableObject_H

#include "java/lang/Object.h"

namespace java {
  namespace io {
    class OutputStream;
    class IOException;
    class InputStream;
  }
  namespace util {
    class List;
    class BitSet;
  }
  namespace lang {
    class ClassNotFoundException;
    class String;
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace spatial3d {
        namespace geom {
          class PlanetObject;
          class PlanetModel;
          class GeoPoint;
          class GeoPolygon;
          class SerializableObject;
        }
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace spatial3d {
        namespace geom {

          class SerializableObject : public ::java::lang::Object {
           public:
            enum {
              mid_readBitSet_dce2dfe68e6799d4,
              mid_readBoolean_13edc0a4e23d5bfa,
              mid_readByteArray_c79e88219c00073d,
              mid_readClass_3ebbff4aac38e904,
              mid_readDouble_97fef3f6eed7604f,
              mid_readHeterogeneousArray_1cec171bbafd31c7,
              mid_readHomogeneousArray_1cec171bbafd31c7,
              mid_readInt_f156d74e1a982c36,
              mid_readLong_fcbf7ea314901f71,
              mid_readObject_89d795864eb4170a,
              mid_readObject_5c9ba4af0adb7c6f,
              mid_readObject_c8ab9978b437e0cf,
              mid_readObject_7ef02e6390f305d2,
              mid_readPlanetObject_99002fbb4d699021,
              mid_readPointArray_32a3931ee1908a6d,
              mid_readPolygonArray_d9d40a5b1312567e,
              mid_readString_ef2e0dcdb246f440,
              mid_write_f504a452125cc9e5,
              mid_writeBitSet_548580f8e077b20a,
              mid_writeBoolean_b59a2e03086d4a41,
              mid_writeByteArray_c88149d0af7177fb,
              mid_writeClass_4b65405db6d2a04a,
              mid_writeDouble_dd1ed928d7536bed,
              mid_writeHeterogeneousArray_4aaf95b3a9aa61ad,
              mid_writeHeterogeneousArray_152968a6b6982a73,
              mid_writeHomogeneousArray_4aaf95b3a9aa61ad,
              mid_writeHomogeneousArray_152968a6b6982a73,
              mid_writeInt_8c14239297b8599c,
              mid_writeLong_80a428d558d73cac,
              mid_writeObject_48c954d6a78ee26a,
              mid_writePlanetObject_b7f68b0df5bcd97e,
              mid_writePointArray_925c3518fa9cdcb8,
              mid_writePointArray_152968a6b6982a73,
              mid_writePolygonArray_ca5adcf7be0a04b3,
              mid_writePolygonArray_152968a6b6982a73,
              mid_writeString_c925da2a6eff7338,
              max_mid
            };

            static ::java::lang::Class *class$;
            static jmethodID *mids$;
            static bool live$;
            static jclass initializeClass(bool);

            explicit SerializableObject(jobject obj) : ::java::lang::Object(obj) {
              if (obj != NULL && mids$ == NULL)
                env->getClass(initializeClass);
            }
            SerializableObject(const SerializableObject& obj) : ::java::lang::Object(obj) {}

            static ::java::util::BitSet readBitSet(const ::java::io::InputStream &);
            static jboolean readBoolean(const ::java::io::InputStream &);
            static JArray< jbyte > readByteArray(const ::java::io::InputStream &);
            static ::java::lang::Class readClass(const ::java::io::InputStream &);
            static jdouble readDouble(const ::java::io::InputStream &);
            static JArray< SerializableObject > readHeterogeneousArray(const ::org::apache::lucene::spatial3d::geom::PlanetModel &, const ::java::io::InputStream &, const ::java::lang::Class &);
            static JArray< SerializableObject > readHomogeneousArray(const ::org::apache::lucene::spatial3d::geom::PlanetModel &, const ::java::io::InputStream &, const ::java::lang::Class &);
            static jint readInt(const ::java::io::InputStream &);
            static jlong readLong(const ::java::io::InputStream &);
            static SerializableObject readObject(const ::java::io::InputStream &);
            static SerializableObject readObject(const ::org::apache::lucene::spatial3d::geom::PlanetModel &, const ::java::io::InputStream &);
            static SerializableObject readObject(const ::java::io::InputStream &, const ::java::lang::Class &);
            static SerializableObject readObject(const ::org::apache::lucene::spatial3d::geom::PlanetModel &, const ::java::io::InputStream &, const ::java::lang::Class &);
            static ::org::apache::lucene::spatial3d::geom::PlanetObject readPlanetObject(const ::java::io::InputStream &);
            static JArray< ::org::apache::lucene::spatial3d::geom::GeoPoint > readPointArray(const ::org::apache::lucene::spatial3d::geom::PlanetModel &, const ::java::io::InputStream &);
            static JArray< ::org::apache::lucene::spatial3d::geom::GeoPolygon > readPolygonArray(const ::org::apache::lucene::spatial3d::geom::PlanetModel &, const ::java::io::InputStream &);
            static ::java::lang::String readString(const ::java::io::InputStream &);
            void write(const ::java::io::OutputStream &) const;
            static void writeBitSet(const ::java::io::OutputStream &, const ::java::util::BitSet &);
            static void writeBoolean(const ::java::io::OutputStream &, jboolean);
            static void writeByteArray(const ::java::io::OutputStream &, const JArray< jbyte > &);
            static void writeClass(const ::java::io::OutputStream &, const ::java::lang::Class &);
            static void writeDouble(const ::java::io::OutputStream &, jdouble);
            static void writeHeterogeneousArray(const ::java::io::OutputStream &, const JArray< SerializableObject > &);
            static void writeHeterogeneousArray(const ::java::io::OutputStream &, const ::java::util::List &);
            static void writeHomogeneousArray(const ::java::io::OutputStream &, const JArray< SerializableObject > &);
            static void writeHomogeneousArray(const ::java::io::OutputStream &, const ::java::util::List &);
            static void writeInt(const ::java::io::OutputStream &, jint);
            static void writeLong(const ::java::io::OutputStream &, jlong);
            static void writeObject(const ::java::io::OutputStream &, const SerializableObject &);
            static void writePlanetObject(const ::java::io::OutputStream &, const ::org::apache::lucene::spatial3d::geom::PlanetObject &);
            static void writePointArray(const ::java::io::OutputStream &, const JArray< ::org::apache::lucene::spatial3d::geom::GeoPoint > &);
            static void writePointArray(const ::java::io::OutputStream &, const ::java::util::List &);
            static void writePolygonArray(const ::java::io::OutputStream &, const JArray< ::org::apache::lucene::spatial3d::geom::GeoPolygon > &);
            static void writePolygonArray(const ::java::io::OutputStream &, const ::java::util::List &);
            static void writeString(const ::java::io::OutputStream &, const ::java::lang::String &);
          };
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace spatial3d {
        namespace geom {
          extern PyType_Def PY_TYPE_DEF(SerializableObject);
          extern PyTypeObject *PY_TYPE(SerializableObject);

          class t_SerializableObject {
          public:
            PyObject_HEAD
            SerializableObject object;
            static PyObject *wrap_Object(const SerializableObject&);
            static PyObject *wrap_jobject(const jobject&);
            static void install(PyObject *module);
            static void initialize(PyObject *module);
          };
        }
      }
    }
  }
}

#endif
