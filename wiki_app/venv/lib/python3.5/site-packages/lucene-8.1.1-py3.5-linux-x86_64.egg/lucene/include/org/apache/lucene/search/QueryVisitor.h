#ifndef org_apache_lucene_search_QueryVisitor_H
#define org_apache_lucene_search_QueryVisitor_H

#include "java/lang/Object.h"

namespace java {
  namespace util {
    class Set;
  }
  namespace lang {
    class String;
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace index {
        class Term;
      }
      namespace search {
        class Query;
        class QueryVisitor;
        class BooleanClause$Occur;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {

        class QueryVisitor : public ::java::lang::Object {
         public:
          enum {
            mid_init$_8e1955e8a9db094a,
            mid_acceptField_98daff2c4e381e5e,
            mid_consumeTerms_033dc2b00c00f33c,
            mid_getSubVisitor_b426b8a7c5b1d415,
            mid_termCollector_669386fc4f037206,
            mid_visitLeaf_856bafad4e9a61a4,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit QueryVisitor(jobject obj) : ::java::lang::Object(obj) {
            if (obj != NULL && mids$ == NULL)
              env->getClass(initializeClass);
          }
          QueryVisitor(const QueryVisitor& obj) : ::java::lang::Object(obj) {}

          static QueryVisitor *EMPTY_VISITOR;

          QueryVisitor();

          jboolean acceptField(const ::java::lang::String &) const;
          void consumeTerms(const ::org::apache::lucene::search::Query &, const JArray< ::org::apache::lucene::index::Term > &) const;
          QueryVisitor getSubVisitor(const ::org::apache::lucene::search::BooleanClause$Occur &, const ::org::apache::lucene::search::Query &) const;
          static QueryVisitor termCollector(const ::java::util::Set &);
          void visitLeaf(const ::org::apache::lucene::search::Query &) const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        extern PyType_Def PY_TYPE_DEF(QueryVisitor);
        extern PyTypeObject *PY_TYPE(QueryVisitor);

        class t_QueryVisitor {
        public:
          PyObject_HEAD
          QueryVisitor object;
          static PyObject *wrap_Object(const QueryVisitor&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
