#ifndef org_apache_lucene_store_RAMOutputStream_H
#define org_apache_lucene_store_RAMOutputStream_H

#include "org/apache/lucene/store/IndexOutput.h"

namespace java {
  namespace io {
    class IOException;
  }
  namespace util {
    class Collection;
  }
  namespace lang {
    class String;
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        class Accountable;
      }
      namespace store {
        class RAMFile;
        class DataOutput;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace store {

        class RAMOutputStream : public ::org::apache::lucene::store::IndexOutput {
         public:
          enum {
            mid_init$_8e1955e8a9db094a,
            mid_init$_6b2412e568a6d0f0,
            mid_init$_480ff6b0851f938d,
            mid_close_8e1955e8a9db094a,
            mid_getChecksum_e0866fd7ad03cc05,
            mid_getChildResources_b7f40aa628426e82,
            mid_getFilePointer_e0866fd7ad03cc05,
            mid_ramBytesUsed_e0866fd7ad03cc05,
            mid_reset_8e1955e8a9db094a,
            mid_writeByte_936db15918436489,
            mid_writeBytes_7fc0bf56a271cd51,
            mid_writeTo_63d77d2cce60381d,
            mid_writeTo_e71b2fd94d730932,
            mid_flush_8e1955e8a9db094a,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit RAMOutputStream(jobject obj) : ::org::apache::lucene::store::IndexOutput(obj) {
            if (obj != NULL && mids$ == NULL)
              env->getClass(initializeClass);
          }
          RAMOutputStream(const RAMOutputStream& obj) : ::org::apache::lucene::store::IndexOutput(obj) {}

          RAMOutputStream();
          RAMOutputStream(const ::org::apache::lucene::store::RAMFile &, jboolean);
          RAMOutputStream(const ::java::lang::String &, const ::org::apache::lucene::store::RAMFile &, jboolean);

          void close() const;
          jlong getChecksum() const;
          ::java::util::Collection getChildResources() const;
          jlong getFilePointer() const;
          jlong ramBytesUsed() const;
          void reset() const;
          void writeByte(jbyte) const;
          void writeBytes(const JArray< jbyte > &, jint, jint) const;
          void writeTo(const ::org::apache::lucene::store::DataOutput &) const;
          void writeTo(const JArray< jbyte > &, jint) const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace store {
        extern PyType_Def PY_TYPE_DEF(RAMOutputStream);
        extern PyTypeObject *PY_TYPE(RAMOutputStream);

        class t_RAMOutputStream {
        public:
          PyObject_HEAD
          RAMOutputStream object;
          static PyObject *wrap_Object(const RAMOutputStream&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
