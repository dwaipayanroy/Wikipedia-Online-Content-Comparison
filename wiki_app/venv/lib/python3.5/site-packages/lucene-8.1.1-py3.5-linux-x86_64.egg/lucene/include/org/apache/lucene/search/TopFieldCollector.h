#ifndef org_apache_lucene_search_TopFieldCollector_H
#define org_apache_lucene_search_TopFieldCollector_H

#include "org/apache/lucene/search/TopDocsCollector.h"

namespace java {
  namespace io {
    class IOException;
  }
  namespace lang {
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        class ScoreMode;
        class FieldDoc;
        class Sort;
        class FieldValueHitQueue$Entry;
        class Query;
        class ScoreDoc;
        class IndexSearcher;
        class TopFieldDocs;
        class TopFieldCollector;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {

        class TopFieldCollector : public ::org::apache::lucene::search::TopDocsCollector {
         public:
          enum {
            mid_create_9233ed4fb919f80f,
            mid_create_8203ade9d71447ea,
            mid_isEarlyTerminated_b61c635e27ed4ce7,
            mid_populateScores_6217c161b6c41953,
            mid_scoreMode_7a443fab1c2d64ec,
            mid_topDocs_9cef531af62c975b,
            mid_newTopDocs_b4c61e30a7e1715f,
            mid_populateResults_4f9d31f4b29ceca4,
            mid_updateMinCompetitiveScore_37aac9160a0ca7bb,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit TopFieldCollector(jobject obj) : ::org::apache::lucene::search::TopDocsCollector(obj) {
            if (obj != NULL && mids$ == NULL)
              env->getClass(initializeClass);
          }
          TopFieldCollector(const TopFieldCollector& obj) : ::org::apache::lucene::search::TopDocsCollector(obj) {}

          static TopFieldCollector create(const ::org::apache::lucene::search::Sort &, jint, jint);
          static TopFieldCollector create(const ::org::apache::lucene::search::Sort &, jint, const ::org::apache::lucene::search::FieldDoc &, jint);
          jboolean isEarlyTerminated() const;
          static void populateScores(const JArray< ::org::apache::lucene::search::ScoreDoc > &, const ::org::apache::lucene::search::IndexSearcher &, const ::org::apache::lucene::search::Query &);
          ::org::apache::lucene::search::ScoreMode scoreMode() const;
          ::org::apache::lucene::search::TopFieldDocs topDocs() const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        extern PyType_Def PY_TYPE_DEF(TopFieldCollector);
        extern PyTypeObject *PY_TYPE(TopFieldCollector);

        class t_TopFieldCollector {
        public:
          PyObject_HEAD
          TopFieldCollector object;
          PyTypeObject *parameters[1];
          static PyTypeObject **parameters_(t_TopFieldCollector *self)
          {
            return (PyTypeObject **) &(self->parameters);
          }
          static PyObject *wrap_Object(const TopFieldCollector&);
          static PyObject *wrap_jobject(const jobject&);
          static PyObject *wrap_Object(const TopFieldCollector&, PyTypeObject *);
          static PyObject *wrap_jobject(const jobject&, PyTypeObject *);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
