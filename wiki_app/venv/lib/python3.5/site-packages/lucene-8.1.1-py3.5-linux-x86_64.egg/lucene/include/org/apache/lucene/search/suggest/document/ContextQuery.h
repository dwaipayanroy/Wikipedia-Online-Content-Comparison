#ifndef org_apache_lucene_search_suggest_document_ContextQuery_H
#define org_apache_lucene_search_suggest_document_ContextQuery_H

#include "org/apache/lucene/search/suggest/document/CompletionQuery.h"

namespace java {
  namespace io {
    class IOException;
  }
  namespace lang {
    class Object;
    class Class;
    class CharSequence;
    class String;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        class ScoreMode;
        class QueryVisitor;
        class Weight;
        class IndexSearcher;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        namespace suggest {
          namespace document {

            class ContextQuery : public ::org::apache::lucene::search::suggest::document::CompletionQuery {
             public:
              enum {
                mid_init$_710f049ef0a211d0,
                mid_addAllContexts_8e1955e8a9db094a,
                mid_addContext_16a385b5c9ec001b,
                mid_addContext_d7439c03aa362448,
                mid_addContext_e0ebd14edc55340d,
                mid_createWeight_550188c57d2295a1,
                mid_equals_95c645439e1de637,
                mid_hashCode_ebe7ab370a509c13,
                mid_toString_744f4d1a4f853475,
                mid_visit_8d58f89b6b661a18,
                max_mid
              };

              static ::java::lang::Class *class$;
              static jmethodID *mids$;
              static bool live$;
              static jclass initializeClass(bool);

              explicit ContextQuery(jobject obj) : ::org::apache::lucene::search::suggest::document::CompletionQuery(obj) {
                if (obj != NULL && mids$ == NULL)
                  env->getClass(initializeClass);
              }
              ContextQuery(const ContextQuery& obj) : ::org::apache::lucene::search::suggest::document::CompletionQuery(obj) {}

              ContextQuery(const ::org::apache::lucene::search::suggest::document::CompletionQuery &);

              void addAllContexts() const;
              void addContext(const ::java::lang::CharSequence &) const;
              void addContext(const ::java::lang::CharSequence &, jfloat) const;
              void addContext(const ::java::lang::CharSequence &, jfloat, jboolean) const;
              ::org::apache::lucene::search::Weight createWeight(const ::org::apache::lucene::search::IndexSearcher &, const ::org::apache::lucene::search::ScoreMode &, jfloat) const;
              jboolean equals(const ::java::lang::Object &) const;
              jint hashCode() const;
              ::java::lang::String toString(const ::java::lang::String &) const;
              void visit(const ::org::apache::lucene::search::QueryVisitor &) const;
            };
          }
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        namespace suggest {
          namespace document {
            extern PyType_Def PY_TYPE_DEF(ContextQuery);
            extern PyTypeObject *PY_TYPE(ContextQuery);

            class t_ContextQuery {
            public:
              PyObject_HEAD
              ContextQuery object;
              static PyObject *wrap_Object(const ContextQuery&);
              static PyObject *wrap_jobject(const jobject&);
              static void install(PyObject *module);
              static void initialize(PyObject *module);
            };
          }
        }
      }
    }
  }
}

#endif
