#ifndef java_lang_ClassLoader_H
#define java_lang_ClassLoader_H

#include "java/lang/Object.h"

namespace java {
  namespace util {
    class Enumeration;
  }
  namespace io {
    class InputStream;
  }
  namespace lang {
    class ClassNotFoundException;
    class ClassLoader;
    class String;
    class Class;
  }
}
template<class T> class JArray;

namespace java {
  namespace lang {

    class ClassLoader : public ::java::lang::Object {
     public:
      enum {
        mid_clearAssertionStatus_8e1955e8a9db094a,
        mid_getParent_61e3d6e2c454a30a,
        mid_getResourceAsStream_580372f9bebaf06e,
        mid_getSystemClassLoader_61e3d6e2c454a30a,
        mid_getSystemResourceAsStream_580372f9bebaf06e,
        mid_loadClass_7e8c77ef58238448,
        mid_setClassAssertionStatus_9c829c030b660167,
        mid_setDefaultAssertionStatus_cfd4ba314e3c83fb,
        mid_setPackageAssertionStatus_9c829c030b660167,
        mid_loadClass_b692946aa6ce54bb,
        mid_getPackage_bc6eb13d59eafc63,
        mid_setSigners_7e99f0fec936405c,
        mid_getClassLoadingLock_9c642d24509c159e,
        mid_findClass_7e8c77ef58238448,
        mid_defineClass_1f99ccc0057d31d4,
        mid_defineClass_b2e6bab068f79412,
        mid_defineClass_bb33e5996a38f084,
        mid_defineClass_7b2ba13ceb0cf357,
        mid_resolveClass_45a1fc610aa841d1,
        mid_findSystemClass_7e8c77ef58238448,
        mid_findLoadedClass_7e8c77ef58238448,
        mid_findResource_194696ce21a102dd,
        mid_findResources_1ae4610e80b32ba1,
        mid_registerAsParallelCapable_b61c635e27ed4ce7,
        mid_definePackage_7798c25e6962848e,
        mid_getPackages_0f06a32e9eba3990,
        mid_findLibrary_744f4d1a4f853475,
        max_mid
      };

      static ::java::lang::Class *class$;
      static jmethodID *mids$;
      static bool live$;
      static jclass initializeClass(bool);

      explicit ClassLoader(jobject obj) : ::java::lang::Object(obj) {
        if (obj != NULL && mids$ == NULL)
          env->getClass(initializeClass);
      }
      ClassLoader(const ClassLoader& obj) : ::java::lang::Object(obj) {}

      void clearAssertionStatus() const;
      ClassLoader getParent() const;
      ::java::io::InputStream getResourceAsStream(const ::java::lang::String &) const;
      static ClassLoader getSystemClassLoader();
      static ::java::io::InputStream getSystemResourceAsStream(const ::java::lang::String &);
      ::java::lang::Class loadClass(const ::java::lang::String &) const;
      void setClassAssertionStatus(const ::java::lang::String &, jboolean) const;
      void setDefaultAssertionStatus(jboolean) const;
      void setPackageAssertionStatus(const ::java::lang::String &, jboolean) const;
    };
  }
}

#include <Python.h>

namespace java {
  namespace lang {
    extern PyType_Def PY_TYPE_DEF(ClassLoader);
    extern PyTypeObject *PY_TYPE(ClassLoader);

    class t_ClassLoader {
    public:
      PyObject_HEAD
      ClassLoader object;
      static PyObject *wrap_Object(const ClassLoader&);
      static PyObject *wrap_jobject(const jobject&);
      static void install(PyObject *module);
      static void initialize(PyObject *module);
    };
  }
}

#endif
