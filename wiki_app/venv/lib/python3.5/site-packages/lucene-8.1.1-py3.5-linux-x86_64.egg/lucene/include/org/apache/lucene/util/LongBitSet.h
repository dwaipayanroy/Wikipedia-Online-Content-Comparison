#ifndef org_apache_lucene_util_LongBitSet_H
#define org_apache_lucene_util_LongBitSet_H

#include "java/lang/Object.h"

namespace java {
  namespace lang {
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        class LongBitSet;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {

        class LongBitSet : public ::java::lang::Object {
         public:
          enum {
            mid_init$_d89013dae69b2a92,
            mid_init$_f05786fdebf2c456,
            mid_and_3da4b175cc69ca47,
            mid_andNot_3da4b175cc69ca47,
            mid_bits2words_ed628a3451749a34,
            mid_cardinality_e0866fd7ad03cc05,
            mid_clear_d89013dae69b2a92,
            mid_clear_a2328b6d91d83df9,
            mid_clone_6e3373887e2805ca,
            mid_ensureCapacity_b9671e4ed55c56c8,
            mid_equals_95c645439e1de637,
            mid_flip_d89013dae69b2a92,
            mid_flip_a2328b6d91d83df9,
            mid_get_4b99fda22ba175c6,
            mid_getAndClear_4b99fda22ba175c6,
            mid_getAndSet_4b99fda22ba175c6,
            mid_getBits_439c0db87e4d0b90,
            mid_hashCode_ebe7ab370a509c13,
            mid_intersects_7c7e4b969895cdd0,
            mid_length_e0866fd7ad03cc05,
            mid_nextSetBit_873a1a4861d6277b,
            mid_or_3da4b175cc69ca47,
            mid_prevSetBit_873a1a4861d6277b,
            mid_scanIsEmpty_b61c635e27ed4ce7,
            mid_set_d89013dae69b2a92,
            mid_set_a2328b6d91d83df9,
            mid_xor_3da4b175cc69ca47,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit LongBitSet(jobject obj) : ::java::lang::Object(obj) {
            if (obj != NULL && mids$ == NULL)
              env->getClass(initializeClass);
          }
          LongBitSet(const LongBitSet& obj) : ::java::lang::Object(obj) {}

          static jlong MAX_NUM_BITS;

          LongBitSet(jlong);
          LongBitSet(const JArray< jlong > &, jlong);

          void and$(const LongBitSet &) const;
          void andNot(const LongBitSet &) const;
          static jint bits2words(jlong);
          jlong cardinality() const;
          void clear(jlong) const;
          void clear(jlong, jlong) const;
          LongBitSet clone() const;
          static LongBitSet ensureCapacity(const LongBitSet &, jlong);
          jboolean equals(const ::java::lang::Object &) const;
          void flip(jlong) const;
          void flip(jlong, jlong) const;
          jboolean get(jlong) const;
          jboolean getAndClear(jlong) const;
          jboolean getAndSet(jlong) const;
          JArray< jlong > getBits() const;
          jint hashCode() const;
          jboolean intersects(const LongBitSet &) const;
          jlong length() const;
          jlong nextSetBit(jlong) const;
          void or$(const LongBitSet &) const;
          jlong prevSetBit(jlong) const;
          jboolean scanIsEmpty() const;
          void set(jlong) const;
          void set(jlong, jlong) const;
          void xor$(const LongBitSet &) const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        extern PyType_Def PY_TYPE_DEF(LongBitSet);
        extern PyTypeObject *PY_TYPE(LongBitSet);

        class t_LongBitSet {
        public:
          PyObject_HEAD
          LongBitSet object;
          static PyObject *wrap_Object(const LongBitSet&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
