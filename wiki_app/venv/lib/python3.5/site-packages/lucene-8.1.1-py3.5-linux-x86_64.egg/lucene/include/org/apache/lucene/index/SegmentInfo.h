#ifndef org_apache_lucene_index_SegmentInfo_H
#define org_apache_lucene_index_SegmentInfo_H

#include "java/lang/Object.h"

namespace java {
  namespace util {
    class Set;
    class Map;
    class Collection;
  }
  namespace lang {
    class String;
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace codecs {
        class Codec;
      }
      namespace util {
        class Version;
      }
      namespace search {
        class Sort;
      }
      namespace store {
        class Directory;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace index {

        class SegmentInfo : public ::java::lang::Object {
         public:
          enum {
            mid_init$_e40d42b54dd11e5a,
            mid_addFile_f23cb8ed8bef391c,
            mid_addFiles_376407cf583ef774,
            mid_equals_95c645439e1de637,
            mid_files_b47526fcab3b3190,
            mid_getAttribute_744f4d1a4f853475,
            mid_getAttributes_776657198fbc9f41,
            mid_getCodec_23f715ff00bfeea2,
            mid_getDiagnostics_776657198fbc9f41,
            mid_getId_7bddfff143a4e7e0,
            mid_getIndexSort_534a22cb7da7614e,
            mid_getMinVersion_96722d4d7fe3eec7,
            mid_getUseCompoundFile_b61c635e27ed4ce7,
            mid_getVersion_96722d4d7fe3eec7,
            mid_hashCode_ebe7ab370a509c13,
            mid_maxDoc_ebe7ab370a509c13,
            mid_putAttribute_b7ab710c19669f80,
            mid_setCodec_d7f2b3f843f43072,
            mid_setFiles_376407cf583ef774,
            mid_toString_a59eabb26a802fa9,
            mid_toString_051f7871497adf6a,
            max_mid
          };

          enum {
            fid_dir,
            fid_name,
            max_fid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static jfieldID *fids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit SegmentInfo(jobject obj) : ::java::lang::Object(obj) {
            if (obj != NULL && mids$ == NULL)
              env->getClass(initializeClass);
          }
          SegmentInfo(const SegmentInfo& obj) : ::java::lang::Object(obj) {}

          static jint NO;
          static jint YES;

          ::org::apache::lucene::store::Directory _get_dir() const;
          ::java::lang::String _get_name() const;

          SegmentInfo(const ::org::apache::lucene::store::Directory &, const ::org::apache::lucene::util::Version &, const ::org::apache::lucene::util::Version &, const ::java::lang::String &, jint, jboolean, const ::org::apache::lucene::codecs::Codec &, const ::java::util::Map &, const JArray< jbyte > &, const ::java::util::Map &, const ::org::apache::lucene::search::Sort &);

          void addFile(const ::java::lang::String &) const;
          void addFiles(const ::java::util::Collection &) const;
          jboolean equals(const ::java::lang::Object &) const;
          ::java::util::Set files() const;
          ::java::lang::String getAttribute(const ::java::lang::String &) const;
          ::java::util::Map getAttributes() const;
          ::org::apache::lucene::codecs::Codec getCodec() const;
          ::java::util::Map getDiagnostics() const;
          JArray< jbyte > getId() const;
          ::org::apache::lucene::search::Sort getIndexSort() const;
          ::org::apache::lucene::util::Version getMinVersion() const;
          jboolean getUseCompoundFile() const;
          ::org::apache::lucene::util::Version getVersion() const;
          jint hashCode() const;
          jint maxDoc() const;
          ::java::lang::String putAttribute(const ::java::lang::String &, const ::java::lang::String &) const;
          void setCodec(const ::org::apache::lucene::codecs::Codec &) const;
          void setFiles(const ::java::util::Collection &) const;
          ::java::lang::String toString() const;
          ::java::lang::String toString(jint) const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace index {
        extern PyType_Def PY_TYPE_DEF(SegmentInfo);
        extern PyTypeObject *PY_TYPE(SegmentInfo);

        class t_SegmentInfo {
        public:
          PyObject_HEAD
          SegmentInfo object;
          static PyObject *wrap_Object(const SegmentInfo&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
