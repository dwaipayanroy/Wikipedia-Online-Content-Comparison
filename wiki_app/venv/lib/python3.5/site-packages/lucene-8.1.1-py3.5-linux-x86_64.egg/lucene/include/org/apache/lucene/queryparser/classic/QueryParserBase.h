#ifndef org_apache_lucene_queryparser_classic_QueryParserBase_H
#define org_apache_lucene_queryparser_classic_QueryParserBase_H

#include "org/apache/lucene/util/QueryBuilder.h"

namespace java {
  namespace util {
    class Locale;
    class TimeZone;
  }
  namespace lang {
    class String;
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace queryparser {
        namespace flexible {
          namespace standard {
            class CommonQueryParserConfiguration;
          }
        }
        namespace classic {
          class CharStream;
          class ParseException;
          class QueryParser$Operator;
        }
      }
      namespace document {
        class DateTools$Resolution;
      }
      namespace search {
        class Query;
        class MultiTermQuery$RewriteMethod;
      }
      namespace analysis {
        class Analyzer;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace queryparser {
        namespace classic {

          class QueryParserBase : public ::org::apache::lucene::util::QueryBuilder {
           public:
            enum {
              mid_ReInit_39dd2e523524b977,
              mid_TopLevelQuery_7fd8ab49703f5846,
              mid_escape_744f4d1a4f853475,
              mid_getAllowLeadingWildcard_b61c635e27ed4ce7,
              mid_getAutoGeneratePhraseQueries_b61c635e27ed4ce7,
              mid_getDateResolution_d0e0acf8fe04f423,
              mid_getDefaultOperator_141fc55a4345508f,
              mid_getField_a59eabb26a802fa9,
              mid_getFuzzyMinSim_9c0456e344056ea9,
              mid_getFuzzyPrefixLength_ebe7ab370a509c13,
              mid_getLocale_07b71174137c6442,
              mid_getMaxDeterminizedStates_ebe7ab370a509c13,
              mid_getMultiTermRewriteMethod_e37ae501ce0e4ac4,
              mid_getPhraseSlop_ebe7ab370a509c13,
              mid_getTimeZone_787eb1f05a36b0b4,
              mid_init_abcdfd0e54dc58a8,
              mid_parse_7fd8ab49703f5846,
              mid_setAllowLeadingWildcard_cfd4ba314e3c83fb,
              mid_setAutoGeneratePhraseQueries_cfd4ba314e3c83fb,
              mid_setDateResolution_d58a7055e60a8eaf,
              mid_setDateResolution_1738547c49e3cb90,
              mid_setDefaultOperator_51640c527c272ee4,
              mid_setFuzzyMinSim_87f6151add653f41,
              mid_setFuzzyPrefixLength_36df8fa8e39fb5cc,
              mid_setLocale_8bbecf90dc4a703a,
              mid_setMaxDeterminizedStates_36df8fa8e39fb5cc,
              mid_setMultiTermRewriteMethod_9e560349826adfe5,
              mid_setPhraseSlop_36df8fa8e39fb5cc,
              mid_setTimeZone_317811a866c3c9f7,
              mid_addClause_b164e32f98237c86,
              mid_getBooleanQuery_8d20c724f81160d4,
              mid_getFuzzyQuery_45f44e003986e934,
              mid_getPrefixQuery_51bf4fead0eff4e9,
              mid_getRangeQuery_2a79d7086429c835,
              mid_getWildcardQuery_51bf4fead0eff4e9,
              mid_getFieldQuery_a4c59fe6dc02a166,
              mid_getFieldQuery_7a6e4651b784c54f,
              mid_addMultiTermClauses_ace91b606cc35370,
              mid_newFieldQuery_a6043e92351650d5,
              mid_newBooleanClause_884ba4fcf51ba7dd,
              mid_newPrefixQuery_79ca9b77bb4d3255,
              mid_newRegexpQuery_79ca9b77bb4d3255,
              mid_newFuzzyQuery_07484c4b696ec662,
              mid_newRangeQuery_2a79d7086429c835,
              mid_newMatchAllDocsQuery_e54315ee63f8fa55,
              mid_newWildcardQuery_79ca9b77bb4d3255,
              mid_getRegexpQuery_51bf4fead0eff4e9,
              max_mid
            };

            static ::java::lang::Class *class$;
            static jmethodID *mids$;
            static bool live$;
            static jclass initializeClass(bool);

            explicit QueryParserBase(jobject obj) : ::org::apache::lucene::util::QueryBuilder(obj) {
              if (obj != NULL && mids$ == NULL)
                env->getClass(initializeClass);
            }
            QueryParserBase(const QueryParserBase& obj) : ::org::apache::lucene::util::QueryBuilder(obj) {}

            static ::org::apache::lucene::queryparser::classic::QueryParser$Operator *AND_OPERATOR;
            static ::org::apache::lucene::queryparser::classic::QueryParser$Operator *OR_OPERATOR;

            void ReInit(const ::org::apache::lucene::queryparser::classic::CharStream &) const;
            ::org::apache::lucene::search::Query TopLevelQuery(const ::java::lang::String &) const;
            static ::java::lang::String escape(const ::java::lang::String &);
            jboolean getAllowLeadingWildcard() const;
            jboolean getAutoGeneratePhraseQueries() const;
            ::org::apache::lucene::document::DateTools$Resolution getDateResolution(const ::java::lang::String &) const;
            ::org::apache::lucene::queryparser::classic::QueryParser$Operator getDefaultOperator() const;
            ::java::lang::String getField() const;
            jfloat getFuzzyMinSim() const;
            jint getFuzzyPrefixLength() const;
            ::java::util::Locale getLocale() const;
            jint getMaxDeterminizedStates() const;
            ::org::apache::lucene::search::MultiTermQuery$RewriteMethod getMultiTermRewriteMethod() const;
            jint getPhraseSlop() const;
            ::java::util::TimeZone getTimeZone() const;
            void init(const ::java::lang::String &, const ::org::apache::lucene::analysis::Analyzer &) const;
            ::org::apache::lucene::search::Query parse(const ::java::lang::String &) const;
            void setAllowLeadingWildcard(jboolean) const;
            void setAutoGeneratePhraseQueries(jboolean) const;
            void setDateResolution(const ::org::apache::lucene::document::DateTools$Resolution &) const;
            void setDateResolution(const ::java::lang::String &, const ::org::apache::lucene::document::DateTools$Resolution &) const;
            void setDefaultOperator(const ::org::apache::lucene::queryparser::classic::QueryParser$Operator &) const;
            void setFuzzyMinSim(jfloat) const;
            void setFuzzyPrefixLength(jint) const;
            void setLocale(const ::java::util::Locale &) const;
            void setMaxDeterminizedStates(jint) const;
            void setMultiTermRewriteMethod(const ::org::apache::lucene::search::MultiTermQuery$RewriteMethod &) const;
            void setPhraseSlop(jint) const;
            void setTimeZone(const ::java::util::TimeZone &) const;
          };
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace queryparser {
        namespace classic {
          extern PyType_Def PY_TYPE_DEF(QueryParserBase);
          extern PyTypeObject *PY_TYPE(QueryParserBase);

          class t_QueryParserBase {
          public:
            PyObject_HEAD
            QueryParserBase object;
            static PyObject *wrap_Object(const QueryParserBase&);
            static PyObject *wrap_jobject(const jobject&);
            static void install(PyObject *module);
            static void initialize(PyObject *module);
          };
        }
      }
    }
  }
}

#endif
