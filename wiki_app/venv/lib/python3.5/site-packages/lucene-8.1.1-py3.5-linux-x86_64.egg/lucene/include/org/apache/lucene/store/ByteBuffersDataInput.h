#ifndef org_apache_lucene_store_ByteBuffersDataInput_H
#define org_apache_lucene_store_ByteBuffersDataInput_H

#include "org/apache/lucene/store/DataInput.h"

namespace java {
  namespace io {
    class EOFException;
  }
  namespace util {
    class List;
  }
  namespace lang {
    class String;
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        class Accountable;
      }
      namespace store {
        class RandomAccessInput;
        class ByteBuffersDataInput;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace store {

        class ByteBuffersDataInput : public ::org::apache::lucene::store::DataInput {
         public:
          enum {
            mid_position_e0866fd7ad03cc05,
            mid_ramBytesUsed_e0866fd7ad03cc05,
            mid_readByte_05e841c8d0c07537,
            mid_readByte_27a66f932245f129,
            mid_readBytes_7fc0bf56a271cd51,
            mid_readInt_ed628a3451749a34,
            mid_readLong_873a1a4861d6277b,
            mid_readShort_50adc60a84ab94ca,
            mid_seek_d89013dae69b2a92,
            mid_size_e0866fd7ad03cc05,
            mid_slice_3333e5fa47bf2378,
            mid_toString_a59eabb26a802fa9,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit ByteBuffersDataInput(jobject obj) : ::org::apache::lucene::store::DataInput(obj) {
            if (obj != NULL && mids$ == NULL)
              env->getClass(initializeClass);
          }
          ByteBuffersDataInput(const ByteBuffersDataInput& obj) : ::org::apache::lucene::store::DataInput(obj) {}

          jlong position() const;
          jlong ramBytesUsed() const;
          jbyte readByte() const;
          jbyte readByte(jlong) const;
          void readBytes(const JArray< jbyte > &, jint, jint) const;
          jint readInt(jlong) const;
          jlong readLong(jlong) const;
          jshort readShort(jlong) const;
          void seek(jlong) const;
          jlong size() const;
          ByteBuffersDataInput slice(jlong, jlong) const;
          ::java::lang::String toString() const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace store {
        extern PyType_Def PY_TYPE_DEF(ByteBuffersDataInput);
        extern PyTypeObject *PY_TYPE(ByteBuffersDataInput);

        class t_ByteBuffersDataInput {
        public:
          PyObject_HEAD
          ByteBuffersDataInput object;
          static PyObject *wrap_Object(const ByteBuffersDataInput&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
