#ifndef org_apache_lucene_spatial3d_geom_Vector_H
#define org_apache_lucene_spatial3d_geom_Vector_H

#include "java/lang/Object.h"

namespace java {
  namespace lang {
    class String;
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace spatial3d {
        namespace geom {
          class Membership;
          class Vector;
        }
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace spatial3d {
        namespace geom {

          class Vector : public ::java::lang::Object {
           public:
            enum {
              mid_init$_169fd93b2b819b76,
              mid_init$_e2567287df4e0009,
              mid_init$_95d98ac2a2c54ec5,
              mid_init$_60bff3a9a404abd6,
              mid_crossProductEvaluateIsZero_a2ea13880202cce1,
              mid_dotProduct_fc3021c2752c3606,
              mid_dotProduct_8dd85190ab0b479e,
              mid_equals_95c645439e1de637,
              mid_hashCode_ebe7ab370a509c13,
              mid_isNumericallyIdentical_f03033ab6a62a8d9,
              mid_isNumericallyIdentical_bce6a69d069aa6ba,
              mid_isParallel_f03033ab6a62a8d9,
              mid_isParallel_bce6a69d069aa6ba,
              mid_isWithin_ee020bd1a0790137,
              mid_linearDistance_fc3021c2752c3606,
              mid_linearDistance_8dd85190ab0b479e,
              mid_linearDistanceSquared_fc3021c2752c3606,
              mid_linearDistanceSquared_8dd85190ab0b479e,
              mid_magnitude_dbe9ce177340961e,
              mid_magnitude_8dd85190ab0b479e,
              mid_normalDistance_fc3021c2752c3606,
              mid_normalDistance_8dd85190ab0b479e,
              mid_normalDistanceSquared_fc3021c2752c3606,
              mid_normalDistanceSquared_8dd85190ab0b479e,
              mid_normalize_6bd8b32442ee5c25,
              mid_rotateXY_8690174c93822215,
              mid_rotateXY_d4c24946401e5956,
              mid_rotateXZ_8690174c93822215,
              mid_rotateXZ_d4c24946401e5956,
              mid_rotateZY_8690174c93822215,
              mid_rotateZY_d4c24946401e5956,
              mid_toString_a59eabb26a802fa9,
              mid_translate_70d2304dc144e91a,
              max_mid
            };

            enum {
              fid_x,
              fid_y,
              fid_z,
              max_fid
            };

            static ::java::lang::Class *class$;
            static jmethodID *mids$;
            static jfieldID *fids$;
            static bool live$;
            static jclass initializeClass(bool);

            explicit Vector(jobject obj) : ::java::lang::Object(obj) {
              if (obj != NULL && mids$ == NULL)
                env->getClass(initializeClass);
            }
            Vector(const Vector& obj) : ::java::lang::Object(obj) {}

            static jdouble MINIMUM_ANGULAR_RESOLUTION;
            static jdouble MINIMUM_RESOLUTION;
            static jdouble MINIMUM_RESOLUTION_CUBED;
            static jdouble MINIMUM_RESOLUTION_SQUARED;

            jdouble _get_x() const;
            jdouble _get_y() const;
            jdouble _get_z() const;

            Vector(const Vector &, const Vector &);
            Vector(jdouble, jdouble, jdouble);
            Vector(const Vector &, jdouble, jdouble, jdouble);
            Vector(jdouble, jdouble, jdouble, jdouble, jdouble, jdouble);

            static jboolean crossProductEvaluateIsZero(const Vector &, const Vector &, const Vector &);
            jdouble dotProduct(const Vector &) const;
            jdouble dotProduct(jdouble, jdouble, jdouble) const;
            jboolean equals(const ::java::lang::Object &) const;
            jint hashCode() const;
            jboolean isNumericallyIdentical(const Vector &) const;
            jboolean isNumericallyIdentical(jdouble, jdouble, jdouble) const;
            jboolean isParallel(const Vector &) const;
            jboolean isParallel(jdouble, jdouble, jdouble) const;
            jboolean isWithin(const JArray< ::org::apache::lucene::spatial3d::geom::Membership > &, const JArray< ::org::apache::lucene::spatial3d::geom::Membership > &) const;
            jdouble linearDistance(const Vector &) const;
            jdouble linearDistance(jdouble, jdouble, jdouble) const;
            jdouble linearDistanceSquared(const Vector &) const;
            jdouble linearDistanceSquared(jdouble, jdouble, jdouble) const;
            jdouble magnitude() const;
            static jdouble magnitude(jdouble, jdouble, jdouble);
            jdouble normalDistance(const Vector &) const;
            jdouble normalDistance(jdouble, jdouble, jdouble) const;
            jdouble normalDistanceSquared(const Vector &) const;
            jdouble normalDistanceSquared(jdouble, jdouble, jdouble) const;
            Vector normalize() const;
            Vector rotateXY(jdouble) const;
            Vector rotateXY(jdouble, jdouble) const;
            Vector rotateXZ(jdouble) const;
            Vector rotateXZ(jdouble, jdouble) const;
            Vector rotateZY(jdouble) const;
            Vector rotateZY(jdouble, jdouble) const;
            ::java::lang::String toString() const;
            Vector translate(jdouble, jdouble, jdouble) const;
          };
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace spatial3d {
        namespace geom {
          extern PyType_Def PY_TYPE_DEF(Vector);
          extern PyTypeObject *PY_TYPE(Vector);

          class t_Vector {
          public:
            PyObject_HEAD
            Vector object;
            static PyObject *wrap_Object(const Vector&);
            static PyObject *wrap_jobject(const jobject&);
            static void install(PyObject *module);
            static void initialize(PyObject *module);
          };
        }
      }
    }
  }
}

#endif
