#ifndef org_apache_lucene_geo_EdgeTree_H
#define org_apache_lucene_geo_EdgeTree_H

#include "java/lang/Object.h"

namespace java {
  namespace lang {
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace index {
        class PointValues$Relation;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace geo {

        class EdgeTree : public ::java::lang::Object {
         public:
          enum {
            mid_relate_45e2874b5898ad97,
            mid_relateTriangle_f4467e769aaff949,
            mid_componentRelate_45e2874b5898ad97,
            mid_componentRelateTriangle_f4467e769aaff949,
            mid_internalComponentRelate_45e2874b5898ad97,
            mid_createTree_4caca2e618295aa8,
            mid_pointInTriangle_855c2fb295b8ddcf,
            max_mid
          };

          enum {
            fid_maxLat,
            fid_maxLon,
            fid_minLat,
            fid_minLon,
            max_fid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static jfieldID *fids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit EdgeTree(jobject obj) : ::java::lang::Object(obj) {
            if (obj != NULL && mids$ == NULL)
              env->getClass(initializeClass);
          }
          EdgeTree(const EdgeTree& obj) : ::java::lang::Object(obj) {}

          jdouble _get_maxLat() const;
          jdouble _get_maxLon() const;
          jdouble _get_minLat() const;
          jdouble _get_minLon() const;

          ::org::apache::lucene::index::PointValues$Relation relate(jdouble, jdouble, jdouble, jdouble) const;
          ::org::apache::lucene::index::PointValues$Relation relateTriangle(jdouble, jdouble, jdouble, jdouble, jdouble, jdouble) const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace geo {
        extern PyType_Def PY_TYPE_DEF(EdgeTree);
        extern PyTypeObject *PY_TYPE(EdgeTree);

        class t_EdgeTree {
        public:
          PyObject_HEAD
          EdgeTree object;
          static PyObject *wrap_Object(const EdgeTree&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
