#ifndef org_apache_lucene_util_ArrayUtil_H
#define org_apache_lucene_util_ArrayUtil_H

#include "java/lang/Object.h"

namespace java {
  namespace util {
    class Comparator;
  }
  namespace lang {
    class NumberFormatException;
    class Comparable;
    class Class;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {

        class ArrayUtil : public ::java::lang::Object {
         public:
          enum {
            mid_copyOfSubArray_d12471b4e02f3415,
            mid_copyOfSubArray_2fcd924339f2a89a,
            mid_copyOfSubArray_8176ecdcc2a8f607,
            mid_copyOfSubArray_a1b17cab6944602e,
            mid_copyOfSubArray_69158e4bfb657d1d,
            mid_copyOfSubArray_42bd6c6769a9d261,
            mid_copyOfSubArray_241f45f0d724bf02,
            mid_copyOfSubArray_dd79044385f6fba9,
            mid_grow_f9de8c208591f1a7,
            mid_grow_57807fef75d6228a,
            mid_grow_a8ba08c2e5e20d6c,
            mid_grow_2a0d9cfea30d6e81,
            mid_grow_5dab8018cf14b9c4,
            mid_grow_a8d68a5db5087818,
            mid_grow_e9591493539cde9a,
            mid_grow_c19aa75cbf7b48e7,
            mid_grow_2f587cb85c477f49,
            mid_grow_5e5000eec34eb367,
            mid_grow_d099b42bee88fa67,
            mid_grow_6cf5408f468caad8,
            mid_grow_40f6fc26ab676e32,
            mid_grow_59de9c9815a92886,
            mid_grow_0084a99894b89183,
            mid_growExact_c19aa75cbf7b48e7,
            mid_growExact_2f587cb85c477f49,
            mid_growExact_5e5000eec34eb367,
            mid_growExact_d099b42bee88fa67,
            mid_growExact_6cf5408f468caad8,
            mid_growExact_40f6fc26ab676e32,
            mid_growExact_59de9c9815a92886,
            mid_growExact_0084a99894b89183,
            mid_hashCode_54a9b524a6389a14,
            mid_introSort_8d3fe538f2f00a1c,
            mid_introSort_68cb56f0b3af0336,
            mid_introSort_3dd1b4e85ea507db,
            mid_introSort_083bd50517704518,
            mid_oversize_28fd57ae44f76a2e,
            mid_parseInt_54a9b524a6389a14,
            mid_parseInt_e656c4b9d396c65b,
            mid_select_69cd3f5497892a52,
            mid_swap_d79ebacf43513e4a,
            mid_timSort_8d3fe538f2f00a1c,
            mid_timSort_68cb56f0b3af0336,
            mid_timSort_3dd1b4e85ea507db,
            mid_timSort_083bd50517704518,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit ArrayUtil(jobject obj) : ::java::lang::Object(obj) {
            if (obj != NULL && mids$ == NULL)
              env->getClass(initializeClass);
          }
          ArrayUtil(const ArrayUtil& obj) : ::java::lang::Object(obj) {}

          static jint MAX_ARRAY_LENGTH;

          static JArray< jbyte > copyOfSubArray(const JArray< jbyte > &, jint, jint);
          static JArray< jchar > copyOfSubArray(const JArray< jchar > &, jint, jint);
          static JArray< jdouble > copyOfSubArray(const JArray< jdouble > &, jint, jint);
          static JArray< jfloat > copyOfSubArray(const JArray< jfloat > &, jint, jint);
          static JArray< jint > copyOfSubArray(const JArray< jint > &, jint, jint);
          static JArray< jlong > copyOfSubArray(const JArray< jlong > &, jint, jint);
          static JArray< ::java::lang::Object > copyOfSubArray(const JArray< ::java::lang::Object > &, jint, jint);
          static JArray< jshort > copyOfSubArray(const JArray< jshort > &, jint, jint);
          static JArray< jbyte > grow(const JArray< jbyte > &);
          static JArray< jchar > grow(const JArray< jchar > &);
          static JArray< jdouble > grow(const JArray< jdouble > &);
          static JArray< jfloat > grow(const JArray< jfloat > &);
          static JArray< jint > grow(const JArray< jint > &);
          static JArray< jlong > grow(const JArray< jlong > &);
          static JArray< jshort > grow(const JArray< jshort > &);
          static JArray< jbyte > grow(const JArray< jbyte > &, jint);
          static JArray< jchar > grow(const JArray< jchar > &, jint);
          static JArray< jdouble > grow(const JArray< jdouble > &, jint);
          static JArray< jfloat > grow(const JArray< jfloat > &, jint);
          static JArray< jint > grow(const JArray< jint > &, jint);
          static JArray< jlong > grow(const JArray< jlong > &, jint);
          static JArray< ::java::lang::Object > grow(const JArray< ::java::lang::Object > &, jint);
          static JArray< jshort > grow(const JArray< jshort > &, jint);
          static JArray< jbyte > growExact(const JArray< jbyte > &, jint);
          static JArray< jchar > growExact(const JArray< jchar > &, jint);
          static JArray< jdouble > growExact(const JArray< jdouble > &, jint);
          static JArray< jfloat > growExact(const JArray< jfloat > &, jint);
          static JArray< jint > growExact(const JArray< jint > &, jint);
          static JArray< jlong > growExact(const JArray< jlong > &, jint);
          static JArray< ::java::lang::Object > growExact(const JArray< ::java::lang::Object > &, jint);
          static JArray< jshort > growExact(const JArray< jshort > &, jint);
          static jint hashCode(const JArray< jchar > &, jint, jint);
          static void introSort(const JArray< ::java::lang::Comparable > &);
          static void introSort(const JArray< ::java::lang::Object > &, const ::java::util::Comparator &);
          static void introSort(const JArray< ::java::lang::Comparable > &, jint, jint);
          static void introSort(const JArray< ::java::lang::Object > &, jint, jint, const ::java::util::Comparator &);
          static jint oversize(jint, jint);
          static jint parseInt(const JArray< jchar > &, jint, jint);
          static jint parseInt(const JArray< jchar > &, jint, jint, jint);
          static void select(const JArray< ::java::lang::Object > &, jint, jint, jint, const ::java::util::Comparator &);
          static void swap(const JArray< ::java::lang::Object > &, jint, jint);
          static void timSort(const JArray< ::java::lang::Comparable > &);
          static void timSort(const JArray< ::java::lang::Object > &, const ::java::util::Comparator &);
          static void timSort(const JArray< ::java::lang::Comparable > &, jint, jint);
          static void timSort(const JArray< ::java::lang::Object > &, jint, jint, const ::java::util::Comparator &);
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        extern PyType_Def PY_TYPE_DEF(ArrayUtil);
        extern PyTypeObject *PY_TYPE(ArrayUtil);

        class t_ArrayUtil {
        public:
          PyObject_HEAD
          ArrayUtil object;
          static PyObject *wrap_Object(const ArrayUtil&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
