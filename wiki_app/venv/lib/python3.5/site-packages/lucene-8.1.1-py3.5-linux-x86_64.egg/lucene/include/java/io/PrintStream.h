#ifndef java_io_PrintStream_H
#define java_io_PrintStream_H

#include "java/io/FilterOutputStream.h"

namespace java {
  namespace io {
    class PrintStream;
    class UnsupportedEncodingException;
    class OutputStream;
    class FileNotFoundException;
    class File;
  }
  namespace util {
    class Locale;
  }
  namespace lang {
    class CharSequence;
    class Object;
    class Appendable;
    class Class;
    class String;
  }
}
template<class T> class JArray;

namespace java {
  namespace io {

    class PrintStream : public ::java::io::FilterOutputStream {
     public:
      enum {
        mid_init$_5715eb06d5b90692,
        mid_init$_f504a452125cc9e5,
        mid_init$_f23cb8ed8bef391c,
        mid_init$_9076831bd07a6ffb,
        mid_init$_d0828f028d0b24e8,
        mid_init$_b59a2e03086d4a41,
        mid_init$_8a4950b36f12f5e8,
        mid_append_664cbf517f9c5238,
        mid_append_78c45e5faca0db3d,
        mid_append_b83c71b825a6f7a5,
        mid_checkError_b61c635e27ed4ce7,
        mid_close_8e1955e8a9db094a,
        mid_flush_8e1955e8a9db094a,
        mid_format_ca6df0ede7d97855,
        mid_format_a8d33f2638f46f35,
        mid_print_430360821bfbd749,
        mid_print_f23cb8ed8bef391c,
        mid_print_cfd4ba314e3c83fb,
        mid_print_9ce3c86676edc32d,
        mid_print_c3a3feb3c744702e,
        mid_print_87f6151add653f41,
        mid_print_36df8fa8e39fb5cc,
        mid_print_a7a564bf8b4a102e,
        mid_print_d89013dae69b2a92,
        mid_printf_ca6df0ede7d97855,
        mid_printf_a8d33f2638f46f35,
        mid_println_8e1955e8a9db094a,
        mid_println_430360821bfbd749,
        mid_println_f23cb8ed8bef391c,
        mid_println_cfd4ba314e3c83fb,
        mid_println_9ce3c86676edc32d,
        mid_println_c3a3feb3c744702e,
        mid_println_87f6151add653f41,
        mid_println_36df8fa8e39fb5cc,
        mid_println_a7a564bf8b4a102e,
        mid_println_d89013dae69b2a92,
        mid_write_36df8fa8e39fb5cc,
        mid_write_7fc0bf56a271cd51,
        mid_setError_8e1955e8a9db094a,
        mid_clearError_8e1955e8a9db094a,
        max_mid
      };

      static ::java::lang::Class *class$;
      static jmethodID *mids$;
      static bool live$;
      static jclass initializeClass(bool);

      explicit PrintStream(jobject obj) : ::java::io::FilterOutputStream(obj) {
        if (obj != NULL && mids$ == NULL)
          env->getClass(initializeClass);
      }
      PrintStream(const PrintStream& obj) : ::java::io::FilterOutputStream(obj) {}

      PrintStream(const ::java::io::File &);
      PrintStream(const ::java::io::OutputStream &);
      PrintStream(const ::java::lang::String &);
      PrintStream(const ::java::io::File &, const ::java::lang::String &);
      PrintStream(const ::java::lang::String &, const ::java::lang::String &);
      PrintStream(const ::java::io::OutputStream &, jboolean);
      PrintStream(const ::java::io::OutputStream &, jboolean, const ::java::lang::String &);

      PrintStream append(jchar) const;
      PrintStream append(const ::java::lang::CharSequence &) const;
      PrintStream append(const ::java::lang::CharSequence &, jint, jint) const;
      jboolean checkError() const;
      void close() const;
      void flush() const;
      PrintStream format(const ::java::lang::String &, const JArray< ::java::lang::Object > &) const;
      PrintStream format(const ::java::util::Locale &, const ::java::lang::String &, const JArray< ::java::lang::Object > &) const;
      void print(const JArray< jchar > &) const;
      void print(const ::java::lang::String &) const;
      void print(jboolean) const;
      void print(jchar) const;
      void print(jdouble) const;
      void print(jfloat) const;
      void print(jint) const;
      void print(const ::java::lang::Object &) const;
      void print(jlong) const;
      PrintStream printf(const ::java::lang::String &, const JArray< ::java::lang::Object > &) const;
      PrintStream printf(const ::java::util::Locale &, const ::java::lang::String &, const JArray< ::java::lang::Object > &) const;
      void println() const;
      void println(const JArray< jchar > &) const;
      void println(const ::java::lang::String &) const;
      void println(jboolean) const;
      void println(jchar) const;
      void println(jdouble) const;
      void println(jfloat) const;
      void println(jint) const;
      void println(const ::java::lang::Object &) const;
      void println(jlong) const;
      void write(jint) const;
      void write(const JArray< jbyte > &, jint, jint) const;
    };
  }
}

#include <Python.h>

namespace java {
  namespace io {
    extern PyType_Def PY_TYPE_DEF(PrintStream);
    extern PyTypeObject *PY_TYPE(PrintStream);

    class t_PrintStream {
    public:
      PyObject_HEAD
      PrintStream object;
      static PyObject *wrap_Object(const PrintStream&);
      static PyObject *wrap_jobject(const jobject&);
      static void install(PyObject *module);
      static void initialize(PyObject *module);
    };
  }
}

#endif
