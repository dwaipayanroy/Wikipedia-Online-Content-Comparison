#ifndef org_apache_lucene_facet_FacetsCollector_H
#define org_apache_lucene_facet_FacetsCollector_H

#include "org/apache/lucene/search/SimpleCollector.h"

namespace java {
  namespace io {
    class IOException;
  }
  namespace util {
    class List;
  }
  namespace lang {
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace facet {
        class FacetsCollector$MatchingDocs;
      }
      namespace search {
        class Collector;
        class ScoreMode;
        class Sort;
        class Query;
        class ScoreDoc;
        class IndexSearcher;
        class Scorable;
        class TopFieldDocs;
        class TopDocs;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace facet {

        class FacetsCollector : public ::org::apache::lucene::search::SimpleCollector {
         public:
          enum {
            mid_init$_8e1955e8a9db094a,
            mid_init$_cfd4ba314e3c83fb,
            mid_collect_36df8fa8e39fb5cc,
            mid_getKeepScores_b61c635e27ed4ce7,
            mid_getMatchingDocs_3ca2fd68c33ee839,
            mid_scoreMode_7a443fab1c2d64ec,
            mid_search_22595ef6dc54a8bb,
            mid_search_d64997f41bd8b2e3,
            mid_search_960e7e3429bf947d,
            mid_searchAfter_558bf2a88bbd4a23,
            mid_searchAfter_7e8878f8f69a7b10,
            mid_searchAfter_5ad12123ad923642,
            mid_setScorer_37aac9160a0ca7bb,
            mid_doSetNextReader_f360e0464d4e155a,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit FacetsCollector(jobject obj) : ::org::apache::lucene::search::SimpleCollector(obj) {
            if (obj != NULL && mids$ == NULL)
              env->getClass(initializeClass);
          }
          FacetsCollector(const FacetsCollector& obj) : ::org::apache::lucene::search::SimpleCollector(obj) {}

          FacetsCollector();
          FacetsCollector(jboolean);

          void collect(jint) const;
          jboolean getKeepScores() const;
          ::java::util::List getMatchingDocs() const;
          ::org::apache::lucene::search::ScoreMode scoreMode() const;
          static ::org::apache::lucene::search::TopDocs search(const ::org::apache::lucene::search::IndexSearcher &, const ::org::apache::lucene::search::Query &, jint, const ::org::apache::lucene::search::Collector &);
          static ::org::apache::lucene::search::TopFieldDocs search(const ::org::apache::lucene::search::IndexSearcher &, const ::org::apache::lucene::search::Query &, jint, const ::org::apache::lucene::search::Sort &, const ::org::apache::lucene::search::Collector &);
          static ::org::apache::lucene::search::TopFieldDocs search(const ::org::apache::lucene::search::IndexSearcher &, const ::org::apache::lucene::search::Query &, jint, const ::org::apache::lucene::search::Sort &, jboolean, const ::org::apache::lucene::search::Collector &);
          static ::org::apache::lucene::search::TopDocs searchAfter(const ::org::apache::lucene::search::IndexSearcher &, const ::org::apache::lucene::search::ScoreDoc &, const ::org::apache::lucene::search::Query &, jint, const ::org::apache::lucene::search::Collector &);
          static ::org::apache::lucene::search::TopDocs searchAfter(const ::org::apache::lucene::search::IndexSearcher &, const ::org::apache::lucene::search::ScoreDoc &, const ::org::apache::lucene::search::Query &, jint, const ::org::apache::lucene::search::Sort &, const ::org::apache::lucene::search::Collector &);
          static ::org::apache::lucene::search::TopDocs searchAfter(const ::org::apache::lucene::search::IndexSearcher &, const ::org::apache::lucene::search::ScoreDoc &, const ::org::apache::lucene::search::Query &, jint, const ::org::apache::lucene::search::Sort &, jboolean, const ::org::apache::lucene::search::Collector &);
          void setScorer(const ::org::apache::lucene::search::Scorable &) const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace facet {
        extern PyType_Def PY_TYPE_DEF(FacetsCollector);
        extern PyTypeObject *PY_TYPE(FacetsCollector);

        class t_FacetsCollector {
        public:
          PyObject_HEAD
          FacetsCollector object;
          static PyObject *wrap_Object(const FacetsCollector&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
