#ifndef org_apache_lucene_codecs_blocktreeords_OrdsBlockTreeTermsReader_H
#define org_apache_lucene_codecs_blocktreeords_OrdsBlockTreeTermsReader_H

#include "org/apache/lucene/codecs/FieldsProducer.h"

namespace java {
  namespace io {
    class IOException;
  }
  namespace util {
    class Collection;
    class Iterator;
  }
  namespace lang {
    class String;
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace codecs {
        class PostingsReaderBase;
      }
      namespace util {
        class Accountable;
      }
      namespace index {
        class Terms;
        class SegmentReadState;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace codecs {
        namespace blocktreeords {

          class OrdsBlockTreeTermsReader : public ::org::apache::lucene::codecs::FieldsProducer {
           public:
            enum {
              mid_init$_6acf8916ab881a23,
              mid_checkIntegrity_8e1955e8a9db094a,
              mid_close_8e1955e8a9db094a,
              mid_getChildResources_b7f40aa628426e82,
              mid_iterator_44488a5d2e640930,
              mid_ramBytesUsed_e0866fd7ad03cc05,
              mid_size_ebe7ab370a509c13,
              mid_terms_c41b58760d1a7c0b,
              mid_toString_a59eabb26a802fa9,
              max_mid
            };

            static ::java::lang::Class *class$;
            static jmethodID *mids$;
            static bool live$;
            static jclass initializeClass(bool);

            explicit OrdsBlockTreeTermsReader(jobject obj) : ::org::apache::lucene::codecs::FieldsProducer(obj) {
              if (obj != NULL && mids$ == NULL)
                env->getClass(initializeClass);
            }
            OrdsBlockTreeTermsReader(const OrdsBlockTreeTermsReader& obj) : ::org::apache::lucene::codecs::FieldsProducer(obj) {}

            OrdsBlockTreeTermsReader(const ::org::apache::lucene::codecs::PostingsReaderBase &, const ::org::apache::lucene::index::SegmentReadState &);

            void checkIntegrity() const;
            void close() const;
            ::java::util::Collection getChildResources() const;
            ::java::util::Iterator iterator() const;
            jlong ramBytesUsed() const;
            jint size() const;
            ::org::apache::lucene::index::Terms terms(const ::java::lang::String &) const;
            ::java::lang::String toString() const;
          };
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace codecs {
        namespace blocktreeords {
          extern PyType_Def PY_TYPE_DEF(OrdsBlockTreeTermsReader);
          extern PyTypeObject *PY_TYPE(OrdsBlockTreeTermsReader);

          class t_OrdsBlockTreeTermsReader {
          public:
            PyObject_HEAD
            OrdsBlockTreeTermsReader object;
            static PyObject *wrap_Object(const OrdsBlockTreeTermsReader&);
            static PyObject *wrap_jobject(const jobject&);
            static void install(PyObject *module);
            static void initialize(PyObject *module);
          };
        }
      }
    }
  }
}

#endif
