#ifndef org_apache_lucene_search_suggest_jaspell_JaspellTernarySearchTrie_H
#define org_apache_lucene_search_suggest_jaspell_JaspellTernarySearchTrie_H

#include "java/lang/Object.h"

namespace java {
  namespace io {
    class IOException;
  }
  namespace nio {
    namespace file {
      class Path;
    }
  }
  namespace util {
    class List;
    class Locale;
  }
  namespace lang {
    class CharSequence;
    class Float;
    class Class;
    class String;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        class Accountable;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        namespace suggest {
          namespace jaspell {

            class JaspellTernarySearchTrie : public ::java::lang::Object {
             public:
              enum {
                mid_init$_8e1955e8a9db094a,
                mid_init$_8bbecf90dc4a703a,
                mid_init$_dbbf903934157cc2,
                mid_init$_ebb4ca1abf8e9c15,
                mid_get_0c71e464ccfa3431,
                mid_getAndIncrement_a64ab76b42a047ff,
                mid_matchAlmost_29e3443346ec49fd,
                mid_matchAlmost_976b12d70e77649d,
                mid_matchPrefix_29e3443346ec49fd,
                mid_matchPrefix_976b12d70e77649d,
                mid_numDataNodes_ebe7ab370a509c13,
                mid_numNodes_ebe7ab370a509c13,
                mid_put_22f428698fef45ed,
                mid_ramBytesUsed_e0866fd7ad03cc05,
                mid_remove_f23cb8ed8bef391c,
                mid_setMatchAlmostDiff_36df8fa8e39fb5cc,
                mid_setNumReturnValues_36df8fa8e39fb5cc,
                mid_getOrCreateNode_eff62764711d144e,
                mid_numDataNodes_5f769ff0d256f78b,
                mid_numNodes_5f769ff0d256f78b,
                mid_sortKeys_8f90bb6159e2bf54,
                mid_getKey_b6e36a268cd3e940,
                mid_getNode_6db9767ddac74ed8,
                max_mid
              };

              static ::java::lang::Class *class$;
              static jmethodID *mids$;
              static bool live$;
              static jclass initializeClass(bool);

              explicit JaspellTernarySearchTrie(jobject obj) : ::java::lang::Object(obj) {
                if (obj != NULL && mids$ == NULL)
                  env->getClass(initializeClass);
              }
              JaspellTernarySearchTrie(const JaspellTernarySearchTrie& obj) : ::java::lang::Object(obj) {}

              JaspellTernarySearchTrie();
              JaspellTernarySearchTrie(const ::java::util::Locale &);
              JaspellTernarySearchTrie(const ::java::nio::file::Path &);
              JaspellTernarySearchTrie(const ::java::nio::file::Path &, jboolean);

              ::java::lang::Object get(const ::java::lang::CharSequence &) const;
              ::java::lang::Float getAndIncrement(const ::java::lang::String &) const;
              ::java::util::List matchAlmost(const ::java::lang::String &) const;
              ::java::util::List matchAlmost(const ::java::lang::CharSequence &, jint) const;
              ::java::util::List matchPrefix(const ::java::lang::String &) const;
              ::java::util::List matchPrefix(const ::java::lang::CharSequence &, jint) const;
              jint numDataNodes() const;
              jint numNodes() const;
              void put(const ::java::lang::CharSequence &, const ::java::lang::Object &) const;
              jlong ramBytesUsed() const;
              void remove(const ::java::lang::String &) const;
              void setMatchAlmostDiff(jint) const;
              void setNumReturnValues(jint) const;
            };
          }
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        namespace suggest {
          namespace jaspell {
            extern PyType_Def PY_TYPE_DEF(JaspellTernarySearchTrie);
            extern PyTypeObject *PY_TYPE(JaspellTernarySearchTrie);

            class t_JaspellTernarySearchTrie {
            public:
              PyObject_HEAD
              JaspellTernarySearchTrie object;
              static PyObject *wrap_Object(const JaspellTernarySearchTrie&);
              static PyObject *wrap_jobject(const jobject&);
              static void install(PyObject *module);
              static void initialize(PyObject *module);
            };
          }
        }
      }
    }
  }
}

#endif
