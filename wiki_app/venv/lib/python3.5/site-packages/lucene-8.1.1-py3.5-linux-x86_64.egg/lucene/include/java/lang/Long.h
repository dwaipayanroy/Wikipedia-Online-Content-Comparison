#ifndef java_lang_Long_H
#define java_lang_Long_H

#include "java/lang/Number.h"

namespace java {
  namespace lang {
    class Object;
    class Comparable;
    class String;
    class NumberFormatException;
    class Long;
    class Class;
  }
}
template<class T> class JArray;

namespace java {
  namespace lang {

    class Long : public ::java::lang::Number {
     public:
      enum {
        mid_init$_f23cb8ed8bef391c,
        mid_init$_d89013dae69b2a92,
        mid_bitCount_ed628a3451749a34,
        mid_byteValue_05e841c8d0c07537,
        mid_compare_ee2a8af0f0d237d0,
        mid_compareTo_c4f5c2dc4ffb588e,
        mid_compareUnsigned_ee2a8af0f0d237d0,
        mid_decode_2fb949a7af23053d,
        mid_divideUnsigned_f9f8fd8900590d4a,
        mid_doubleValue_dbe9ce177340961e,
        mid_equals_95c645439e1de637,
        mid_floatValue_9c0456e344056ea9,
        mid_getLong_2fb949a7af23053d,
        mid_getLong_bed6bea6bdb0fc17,
        mid_getLong_dcc023c898e6a9a7,
        mid_hashCode_ebe7ab370a509c13,
        mid_hashCode_ed628a3451749a34,
        mid_highestOneBit_873a1a4861d6277b,
        mid_intValue_ebe7ab370a509c13,
        mid_longValue_e0866fd7ad03cc05,
        mid_lowestOneBit_873a1a4861d6277b,
        mid_max_f9f8fd8900590d4a,
        mid_min_f9f8fd8900590d4a,
        mid_numberOfLeadingZeros_ed628a3451749a34,
        mid_numberOfTrailingZeros_ed628a3451749a34,
        mid_parseLong_79a6610a57ccdd14,
        mid_parseLong_e6741afdec88483f,
        mid_parseUnsignedLong_79a6610a57ccdd14,
        mid_parseUnsignedLong_e6741afdec88483f,
        mid_remainderUnsigned_f9f8fd8900590d4a,
        mid_reverse_873a1a4861d6277b,
        mid_reverseBytes_873a1a4861d6277b,
        mid_rotateLeft_add93431e4b3adb8,
        mid_rotateRight_add93431e4b3adb8,
        mid_shortValue_ca93f121c262a7d3,
        mid_signum_ed628a3451749a34,
        mid_sum_f9f8fd8900590d4a,
        mid_toBinaryString_128e65fb787eb87d,
        mid_toHexString_128e65fb787eb87d,
        mid_toOctalString_128e65fb787eb87d,
        mid_toString_a59eabb26a802fa9,
        mid_toString_128e65fb787eb87d,
        mid_toString_5c746c1aa167ad48,
        mid_toUnsignedString_128e65fb787eb87d,
        mid_toUnsignedString_5c746c1aa167ad48,
        mid_valueOf_2fb949a7af23053d,
        mid_valueOf_ae4cd86e19be93d9,
        mid_valueOf_169ee12d891bc54b,
        max_mid
      };

      static ::java::lang::Class *class$;
      static jmethodID *mids$;
      static bool live$;
      static jclass initializeClass(bool);

      explicit Long(jobject obj) : ::java::lang::Number(obj) {
        if (obj != NULL && mids$ == NULL)
          env->getClass(initializeClass);
      }
      Long(const Long& obj) : ::java::lang::Number(obj) {}

      static jint BYTES;
      static jlong MAX_VALUE;
      static jlong MIN_VALUE;
      static jint SIZE;
      static ::java::lang::Class *TYPE;

      Long(const ::java::lang::String &);
      Long(jlong);

      static jint bitCount(jlong);
      jbyte byteValue() const;
      static jint compare(jlong, jlong);
      jint compareTo(const Long &) const;
      static jint compareUnsigned(jlong, jlong);
      static Long decode(const ::java::lang::String &);
      static jlong divideUnsigned(jlong, jlong);
      jdouble doubleValue() const;
      jboolean equals(const ::java::lang::Object &) const;
      jfloat floatValue() const;
      static Long getLong(const ::java::lang::String &);
      static Long getLong(const ::java::lang::String &, const Long &);
      static Long getLong(const ::java::lang::String &, jlong);
      jint hashCode() const;
      static jint hashCode(jlong);
      static jlong highestOneBit(jlong);
      jint intValue() const;
      jlong longValue() const;
      static jlong lowestOneBit(jlong);
      static jlong max$(jlong, jlong);
      static jlong min$(jlong, jlong);
      static jint numberOfLeadingZeros(jlong);
      static jint numberOfTrailingZeros(jlong);
      static jlong parseLong(const ::java::lang::String &);
      static jlong parseLong(const ::java::lang::String &, jint);
      static jlong parseUnsignedLong(const ::java::lang::String &);
      static jlong parseUnsignedLong(const ::java::lang::String &, jint);
      static jlong remainderUnsigned(jlong, jlong);
      static jlong reverse(jlong);
      static jlong reverseBytes(jlong);
      static jlong rotateLeft(jlong, jint);
      static jlong rotateRight(jlong, jint);
      jshort shortValue() const;
      static jint signum(jlong);
      static jlong sum(jlong, jlong);
      static ::java::lang::String toBinaryString(jlong);
      static ::java::lang::String toHexString(jlong);
      static ::java::lang::String toOctalString(jlong);
      ::java::lang::String toString() const;
      static ::java::lang::String toString(jlong);
      static ::java::lang::String toString(jlong, jint);
      static ::java::lang::String toUnsignedString(jlong);
      static ::java::lang::String toUnsignedString(jlong, jint);
      static Long valueOf(const ::java::lang::String &);
      static Long valueOf(jlong);
      static Long valueOf(const ::java::lang::String &, jint);
    };
  }
}

#include <Python.h>

namespace java {
  namespace lang {
    extern PyType_Def PY_TYPE_DEF(Long);
    extern PyTypeObject *PY_TYPE(Long);

    class t_Long {
    public:
      PyObject_HEAD
      Long object;
      static PyObject *wrap_Object(const Long&);
      static PyObject *wrap_jobject(const jobject&);
      static void install(PyObject *module);
      static void initialize(PyObject *module);
    };
  }
}

#endif
