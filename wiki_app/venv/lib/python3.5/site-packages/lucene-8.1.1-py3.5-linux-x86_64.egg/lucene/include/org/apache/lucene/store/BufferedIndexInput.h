#ifndef org_apache_lucene_store_BufferedIndexInput_H
#define org_apache_lucene_store_BufferedIndexInput_H

#include "org/apache/lucene/store/IndexInput.h"

namespace java {
  namespace io {
    class IOException;
  }
  namespace lang {
    class String;
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace store {
        class IOContext;
        class BufferedIndexInput;
        class RandomAccessInput;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace store {

        class BufferedIndexInput : public ::org::apache::lucene::store::IndexInput {
         public:
          enum {
            mid_init$_f23cb8ed8bef391c,
            mid_init$_84ae633dcc705242,
            mid_init$_ad9582605f8cd228,
            mid_bufferSize_f15dbcbb28ed0bb3,
            mid_clone_45f6f048de723926,
            mid_getBufferSize_ebe7ab370a509c13,
            mid_getFilePointer_e0866fd7ad03cc05,
            mid_readByte_05e841c8d0c07537,
            mid_readByte_27a66f932245f129,
            mid_readBytes_7fc0bf56a271cd51,
            mid_readBytes_0c69ef7902ec00cc,
            mid_readInt_ebe7ab370a509c13,
            mid_readInt_ed628a3451749a34,
            mid_readLong_e0866fd7ad03cc05,
            mid_readLong_873a1a4861d6277b,
            mid_readShort_ca93f121c262a7d3,
            mid_readShort_50adc60a84ab94ca,
            mid_readVInt_ebe7ab370a509c13,
            mid_readVLong_e0866fd7ad03cc05,
            mid_seek_d89013dae69b2a92,
            mid_setBufferSize_36df8fa8e39fb5cc,
            mid_slice_ce48212355aa3425,
            mid_wrap_de014e6db1fa0c3c,
            mid_newBuffer_8367e08c35d968ea,
            mid_readInternal_7fc0bf56a271cd51,
            mid_seekInternal_d89013dae69b2a92,
            mid_flushBuffer_388e3b11ea4eacea,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit BufferedIndexInput(jobject obj) : ::org::apache::lucene::store::IndexInput(obj) {
            if (obj != NULL && mids$ == NULL)
              env->getClass(initializeClass);
          }
          BufferedIndexInput(const BufferedIndexInput& obj) : ::org::apache::lucene::store::IndexInput(obj) {}

          static jint BUFFER_SIZE;
          static jint MERGE_BUFFER_SIZE;
          static jint MIN_BUFFER_SIZE;

          BufferedIndexInput(const ::java::lang::String &);
          BufferedIndexInput(const ::java::lang::String &, const ::org::apache::lucene::store::IOContext &);
          BufferedIndexInput(const ::java::lang::String &, jint);

          static jint bufferSize(const ::org::apache::lucene::store::IOContext &);
          BufferedIndexInput clone() const;
          jint getBufferSize() const;
          jlong getFilePointer() const;
          jbyte readByte() const;
          jbyte readByte(jlong) const;
          void readBytes(const JArray< jbyte > &, jint, jint) const;
          void readBytes(const JArray< jbyte > &, jint, jint, jboolean) const;
          jint readInt() const;
          jint readInt(jlong) const;
          jlong readLong() const;
          jlong readLong(jlong) const;
          jshort readShort() const;
          jshort readShort(jlong) const;
          jint readVInt() const;
          jlong readVLong() const;
          void seek(jlong) const;
          void setBufferSize(jint) const;
          ::org::apache::lucene::store::IndexInput slice(const ::java::lang::String &, jlong, jlong) const;
          static BufferedIndexInput wrap(const ::java::lang::String &, const ::org::apache::lucene::store::IndexInput &, jlong, jlong);
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace store {
        extern PyType_Def PY_TYPE_DEF(BufferedIndexInput);
        extern PyTypeObject *PY_TYPE(BufferedIndexInput);

        class t_BufferedIndexInput {
        public:
          PyObject_HEAD
          BufferedIndexInput object;
          static PyObject *wrap_Object(const BufferedIndexInput&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
