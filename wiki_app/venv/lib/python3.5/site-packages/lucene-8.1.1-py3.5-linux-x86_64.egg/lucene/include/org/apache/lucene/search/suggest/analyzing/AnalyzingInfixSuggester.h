#ifndef org_apache_lucene_search_suggest_analyzing_AnalyzingInfixSuggester_H
#define org_apache_lucene_search_suggest_analyzing_AnalyzingInfixSuggester_H

#include "org/apache/lucene/search/suggest/Lookup.h"

namespace java {
  namespace io {
    class Closeable;
    class IOException;
  }
  namespace util {
    class Set;
    class List;
    class Map;
    class Collection;
  }
  namespace lang {
    class CharSequence;
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        class BytesRef;
        class Accountable;
      }
      namespace search {
        class BooleanQuery;
        class BooleanQuery$Builder;
        class BooleanClause$Occur;
        namespace suggest {
          class InputIterator;
          class Lookup$LookupResult;
        }
      }
      namespace analysis {
        class Analyzer;
      }
      namespace store {
        class DataInput;
        class Directory;
        class DataOutput;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        namespace suggest {
          namespace analyzing {

            class AnalyzingInfixSuggester : public ::org::apache::lucene::search::suggest::Lookup {
             public:
              enum {
                mid_init$_4ec6ceadf12ac2e6,
                mid_init$_e4aff516a8a6d851,
                mid_init$_dee4268a86b6a017,
                mid_init$_53a83e10c2ac68bb,
                mid_add_7ca3099ef266a179,
                mid_addContextToQuery_f64dd5a06545097c,
                mid_build_ee3e34efc915faf0,
                mid_close_8e1955e8a9db094a,
                mid_commit_8e1955e8a9db094a,
                mid_getChildResources_b7f40aa628426e82,
                mid_getCount_e0866fd7ad03cc05,
                mid_load_166ec47a25a5a051,
                mid_lookup_03d02737e8b6f3fc,
                mid_lookup_77eef6ded6e5d6fe,
                mid_lookup_a99e9b0f680a9697,
                mid_lookup_01bd5b355983d94c,
                mid_lookup_b89a20166d0e3d94,
                mid_ramBytesUsed_e0866fd7ad03cc05,
                mid_refresh_8e1955e8a9db094a,
                mid_store_825b06e1f05c2bd0,
                mid_update_7ca3099ef266a179,
                mid_getDirectory_9cba14b9cf1e147d,
                mid_highlight_f6fa63d598ad9e6a,
                mid_getTextFieldType_029b995cce658649,
                mid_createResults_f55162455ef3cb47,
                mid_getIndexWriterConfig_9026f266a833e2ac,
                mid_getLastTokenQuery_7fd8ab49703f5846,
                mid_finishQuery_d932303feb0f3fbd,
                mid_addNonMatch_ed19539a1356b16a,
                mid_addWholeMatch_c45b23968ef0daeb,
                mid_addPrefixMatch_afb459fd890de4a0,
                max_mid
              };

              static ::java::lang::Class *class$;
              static jmethodID *mids$;
              static bool live$;
              static jclass initializeClass(bool);

              explicit AnalyzingInfixSuggester(jobject obj) : ::org::apache::lucene::search::suggest::Lookup(obj) {
                if (obj != NULL && mids$ == NULL)
                  env->getClass(initializeClass);
              }
              AnalyzingInfixSuggester(const AnalyzingInfixSuggester& obj) : ::org::apache::lucene::search::suggest::Lookup(obj) {}

              static jboolean DEFAULT_ALL_TERMS_REQUIRED;
              static jboolean DEFAULT_HIGHLIGHT;
              static jint DEFAULT_MIN_PREFIX_CHARS;

              AnalyzingInfixSuggester(const ::org::apache::lucene::store::Directory &, const ::org::apache::lucene::analysis::Analyzer &);
              AnalyzingInfixSuggester(const ::org::apache::lucene::store::Directory &, const ::org::apache::lucene::analysis::Analyzer &, const ::org::apache::lucene::analysis::Analyzer &, jint, jboolean);
              AnalyzingInfixSuggester(const ::org::apache::lucene::store::Directory &, const ::org::apache::lucene::analysis::Analyzer &, const ::org::apache::lucene::analysis::Analyzer &, jint, jboolean, jboolean, jboolean);
              AnalyzingInfixSuggester(const ::org::apache::lucene::store::Directory &, const ::org::apache::lucene::analysis::Analyzer &, const ::org::apache::lucene::analysis::Analyzer &, jint, jboolean, jboolean, jboolean, jboolean);

              void add(const ::org::apache::lucene::util::BytesRef &, const ::java::util::Set &, jlong, const ::org::apache::lucene::util::BytesRef &) const;
              void addContextToQuery(const ::org::apache::lucene::search::BooleanQuery$Builder &, const ::org::apache::lucene::util::BytesRef &, const ::org::apache::lucene::search::BooleanClause$Occur &) const;
              void build(const ::org::apache::lucene::search::suggest::InputIterator &) const;
              void close() const;
              void commit() const;
              ::java::util::Collection getChildResources() const;
              jlong getCount() const;
              jboolean load(const ::org::apache::lucene::store::DataInput &) const;
              ::java::util::List lookup(const ::java::lang::CharSequence &, jint, jboolean, jboolean) const;
              ::java::util::List lookup(const ::java::lang::CharSequence &, const ::java::util::Set &, jboolean, jint) const;
              ::java::util::List lookup(const ::java::lang::CharSequence &, const ::org::apache::lucene::search::BooleanQuery &, jint, jboolean, jboolean) const;
              ::java::util::List lookup(const ::java::lang::CharSequence &, const ::java::util::Map &, jint, jboolean, jboolean) const;
              ::java::util::List lookup(const ::java::lang::CharSequence &, const ::java::util::Set &, jint, jboolean, jboolean) const;
              jlong ramBytesUsed() const;
              void refresh() const;
              jboolean store(const ::org::apache::lucene::store::DataOutput &) const;
              void update(const ::org::apache::lucene::util::BytesRef &, const ::java::util::Set &, jlong, const ::org::apache::lucene::util::BytesRef &) const;
            };
          }
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        namespace suggest {
          namespace analyzing {
            extern PyType_Def PY_TYPE_DEF(AnalyzingInfixSuggester);
            extern PyTypeObject *PY_TYPE(AnalyzingInfixSuggester);

            class t_AnalyzingInfixSuggester {
            public:
              PyObject_HEAD
              AnalyzingInfixSuggester object;
              static PyObject *wrap_Object(const AnalyzingInfixSuggester&);
              static PyObject *wrap_jobject(const jobject&);
              static void install(PyObject *module);
              static void initialize(PyObject *module);
            };
          }
        }
      }
    }
  }
}

#endif
