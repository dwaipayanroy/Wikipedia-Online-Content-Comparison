#ifndef org_apache_lucene_document_Field_H
#define org_apache_lucene_document_Field_H

#include "java/lang/Object.h"

namespace java {
  namespace io {
    class Reader;
  }
  namespace lang {
    class Number;
    class CharSequence;
    class Class;
    class String;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        class BytesRef;
      }
      namespace index {
        class IndexableFieldType;
        class IndexableField;
      }
      namespace analysis {
        class Analyzer;
        class TokenStream;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace document {

        class Field : public ::java::lang::Object {
         public:
          enum {
            mid_init$_6e6a0dc1bcfb89e3,
            mid_init$_32ecc5f593fbedbc,
            mid_init$_e7040feebe8b2cf5,
            mid_init$_ba90ccebc385bded,
            mid_init$_100b40f89c8f4ac0,
            mid_init$_3b5c7e396610a227,
            mid_binaryValue_74802edf7c1e9c5f,
            mid_fieldType_fd808c1715f9cdf9,
            mid_getCharSequenceValue_2b3ab98bab26f600,
            mid_name_a59eabb26a802fa9,
            mid_numericValue_6ee5dbb958d4b993,
            mid_readerValue_86f9bef4af50707c,
            mid_setByteValue_936db15918436489,
            mid_setBytesValue_8367e08c35d968ea,
            mid_setBytesValue_e1a9e7b7c7c5c82a,
            mid_setDoubleValue_c3a3feb3c744702e,
            mid_setFloatValue_87f6151add653f41,
            mid_setIntValue_36df8fa8e39fb5cc,
            mid_setLongValue_d89013dae69b2a92,
            mid_setReaderValue_4fd8e3a5e4256fa5,
            mid_setShortValue_1626b38adb7a8f80,
            mid_setStringValue_f23cb8ed8bef391c,
            mid_setTokenStream_c0f2041bb7eb7094,
            mid_stringValue_a59eabb26a802fa9,
            mid_toString_a59eabb26a802fa9,
            mid_tokenStream_dd63adba6b250e6d,
            mid_tokenStreamValue_be10e595a2bb11d6,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit Field(jobject obj) : ::java::lang::Object(obj) {
            if (obj != NULL && mids$ == NULL)
              env->getClass(initializeClass);
          }
          Field(const Field& obj) : ::java::lang::Object(obj) {}

          Field(const ::java::lang::String &, const ::org::apache::lucene::analysis::TokenStream &, const ::org::apache::lucene::index::IndexableFieldType &);
          Field(const ::java::lang::String &, const JArray< jbyte > &, const ::org::apache::lucene::index::IndexableFieldType &);
          Field(const ::java::lang::String &, const ::java::io::Reader &, const ::org::apache::lucene::index::IndexableFieldType &);
          Field(const ::java::lang::String &, const ::org::apache::lucene::util::BytesRef &, const ::org::apache::lucene::index::IndexableFieldType &);
          Field(const ::java::lang::String &, const ::java::lang::CharSequence &, const ::org::apache::lucene::index::IndexableFieldType &);
          Field(const ::java::lang::String &, const JArray< jbyte > &, jint, jint, const ::org::apache::lucene::index::IndexableFieldType &);

          ::org::apache::lucene::util::BytesRef binaryValue() const;
          ::org::apache::lucene::index::IndexableFieldType fieldType() const;
          ::java::lang::CharSequence getCharSequenceValue() const;
          ::java::lang::String name() const;
          ::java::lang::Number numericValue() const;
          ::java::io::Reader readerValue() const;
          void setByteValue(jbyte) const;
          void setBytesValue(const JArray< jbyte > &) const;
          void setBytesValue(const ::org::apache::lucene::util::BytesRef &) const;
          void setDoubleValue(jdouble) const;
          void setFloatValue(jfloat) const;
          void setIntValue(jint) const;
          void setLongValue(jlong) const;
          void setReaderValue(const ::java::io::Reader &) const;
          void setShortValue(jshort) const;
          void setStringValue(const ::java::lang::String &) const;
          void setTokenStream(const ::org::apache::lucene::analysis::TokenStream &) const;
          ::java::lang::String stringValue() const;
          ::java::lang::String toString() const;
          ::org::apache::lucene::analysis::TokenStream tokenStream(const ::org::apache::lucene::analysis::Analyzer &, const ::org::apache::lucene::analysis::TokenStream &) const;
          ::org::apache::lucene::analysis::TokenStream tokenStreamValue() const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace document {
        extern PyType_Def PY_TYPE_DEF(Field);
        extern PyTypeObject *PY_TYPE(Field);

        class t_Field {
        public:
          PyObject_HEAD
          Field object;
          static PyObject *wrap_Object(const Field&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
