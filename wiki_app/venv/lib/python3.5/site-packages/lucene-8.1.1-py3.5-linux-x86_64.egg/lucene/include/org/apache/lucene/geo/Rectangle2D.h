#ifndef org_apache_lucene_geo_Rectangle2D_H
#define org_apache_lucene_geo_Rectangle2D_H

#include "java/lang/Object.h"

namespace java {
  namespace lang {
    class String;
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace index {
        class PointValues$Relation;
      }
      namespace geo {
        class Rectangle;
        class Rectangle2D;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace geo {

        class Rectangle2D : public ::java::lang::Object {
         public:
          enum {
            mid_containsTriangle_809d7d4179ff265b,
            mid_create_5533c5be22b566cb,
            mid_crossesDateline_b61c635e27ed4ce7,
            mid_equals_95c645439e1de637,
            mid_hashCode_ebe7ab370a509c13,
            mid_intersectsTriangle_809d7d4179ff265b,
            mid_queryContainsPoint_3d78a41d9cf53a58,
            mid_relateRangeBBox_1d4616cae74cacc4,
            mid_toString_a59eabb26a802fa9,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit Rectangle2D(jobject obj) : ::java::lang::Object(obj) {
            if (obj != NULL && mids$ == NULL)
              env->getClass(initializeClass);
          }
          Rectangle2D(const Rectangle2D& obj) : ::java::lang::Object(obj) {}

          jboolean containsTriangle(jint, jint, jint, jint, jint, jint) const;
          static Rectangle2D create(const ::org::apache::lucene::geo::Rectangle &);
          jboolean crossesDateline() const;
          jboolean equals(const ::java::lang::Object &) const;
          jint hashCode() const;
          jboolean intersectsTriangle(jint, jint, jint, jint, jint, jint) const;
          jboolean queryContainsPoint(jint, jint) const;
          ::org::apache::lucene::index::PointValues$Relation relateRangeBBox(jint, jint, const JArray< jbyte > &, jint, jint, const JArray< jbyte > &) const;
          ::java::lang::String toString() const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace geo {
        extern PyType_Def PY_TYPE_DEF(Rectangle2D);
        extern PyTypeObject *PY_TYPE(Rectangle2D);

        class t_Rectangle2D {
        public:
          PyObject_HEAD
          Rectangle2D object;
          static PyObject *wrap_Object(const Rectangle2D&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
