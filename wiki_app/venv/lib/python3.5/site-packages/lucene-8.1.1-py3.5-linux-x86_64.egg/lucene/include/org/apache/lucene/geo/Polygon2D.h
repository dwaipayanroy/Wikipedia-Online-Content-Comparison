#ifndef org_apache_lucene_geo_Polygon2D_H
#define org_apache_lucene_geo_Polygon2D_H

#include "org/apache/lucene/geo/EdgeTree.h"

namespace java {
  namespace lang {
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace geo {
        class Polygon2D;
        class Polygon;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace geo {

        class Polygon2D : public ::org::apache::lucene::geo::EdgeTree {
         public:
          enum {
            mid_contains_a725514238ca46b6,
            mid_create_c7d8ee19cf6147cb,
            mid_componentRelate_45e2874b5898ad97,
            mid_componentRelateTriangle_f4467e769aaff949,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit Polygon2D(jobject obj) : ::org::apache::lucene::geo::EdgeTree(obj) {
            if (obj != NULL && mids$ == NULL)
              env->getClass(initializeClass);
          }
          Polygon2D(const Polygon2D& obj) : ::org::apache::lucene::geo::EdgeTree(obj) {}

          jboolean contains(jdouble, jdouble) const;
          static Polygon2D create(const JArray< ::org::apache::lucene::geo::Polygon > &);
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace geo {
        extern PyType_Def PY_TYPE_DEF(Polygon2D);
        extern PyTypeObject *PY_TYPE(Polygon2D);

        class t_Polygon2D {
        public:
          PyObject_HEAD
          Polygon2D object;
          static PyObject *wrap_Object(const Polygon2D&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
