#ifndef org_apache_lucene_util_RamUsageEstimator_H
#define org_apache_lucene_util_RamUsageEstimator_H

#include "java/lang/Object.h"

namespace java {
  namespace text {
    class DecimalFormat;
  }
  namespace lang {
    class Long;
    class Class;
    class String;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        class Accountable;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {

        class RamUsageEstimator : public ::java::lang::Object {
         public:
          enum {
            mid_alignObjectSize_873a1a4861d6277b,
            mid_humanReadableUnits_128e65fb787eb87d,
            mid_humanReadableUnits_b675d1da12a05720,
            mid_shallowSizeOf_5629369eb0ab5150,
            mid_shallowSizeOf_eb6c3e3b6f8d96e3,
            mid_shallowSizeOfInstance_e5fe687118315f44,
            mid_sizeOf_0013668a813894a0,
            mid_sizeOf_d1e5eaf951001398,
            mid_sizeOf_70d359d4eec42e7d,
            mid_sizeOf_253180be4cd85da2,
            mid_sizeOf_dcf372f9f16f87d2,
            mid_sizeOf_725eb6f887a49319,
            mid_sizeOf_fb1deca3876b3f49,
            mid_sizeOf_d4fd184ab7c16ddd,
            mid_sizeOf_1887f33b91551f77,
            mid_sizeOf_d1f79a5c135ed99f,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit RamUsageEstimator(jobject obj) : ::java::lang::Object(obj) {
            if (obj != NULL && mids$ == NULL)
              env->getClass(initializeClass);
          }
          RamUsageEstimator(const RamUsageEstimator& obj) : ::java::lang::Object(obj) {}

          static jboolean COMPRESSED_REFS_ENABLED;
          static jint NUM_BYTES_ARRAY_HEADER;
          static jint NUM_BYTES_OBJECT_ALIGNMENT;
          static jint NUM_BYTES_OBJECT_HEADER;
          static jint NUM_BYTES_OBJECT_REF;
          static jlong ONE_GB;
          static jlong ONE_KB;
          static jlong ONE_MB;

          static jlong alignObjectSize(jlong);
          static ::java::lang::String humanReadableUnits(jlong);
          static ::java::lang::String humanReadableUnits(jlong, const ::java::text::DecimalFormat &);
          static jlong shallowSizeOf(const JArray< ::java::lang::Object > &);
          static jlong shallowSizeOf(const ::java::lang::Object &);
          static jlong shallowSizeOfInstance(const ::java::lang::Class &);
          static jlong sizeOf(const ::java::lang::Long &);
          static jlong sizeOf(const JArray< jbyte > &);
          static jlong sizeOf(const JArray< jchar > &);
          static jlong sizeOf(const JArray< jdouble > &);
          static jlong sizeOf(const JArray< jfloat > &);
          static jlong sizeOf(const JArray< jint > &);
          static jlong sizeOf(const JArray< jlong > &);
          static jlong sizeOf(const JArray< ::org::apache::lucene::util::Accountable > &);
          static jlong sizeOf(const JArray< jshort > &);
          static jlong sizeOf(const JArray< jboolean > &);
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        extern PyType_Def PY_TYPE_DEF(RamUsageEstimator);
        extern PyTypeObject *PY_TYPE(RamUsageEstimator);

        class t_RamUsageEstimator {
        public:
          PyObject_HEAD
          RamUsageEstimator object;
          static PyObject *wrap_Object(const RamUsageEstimator&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
