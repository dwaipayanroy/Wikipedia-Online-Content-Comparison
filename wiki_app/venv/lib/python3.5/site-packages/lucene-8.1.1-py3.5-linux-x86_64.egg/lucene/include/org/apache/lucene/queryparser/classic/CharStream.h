#ifndef org_apache_lucene_queryparser_classic_CharStream_H
#define org_apache_lucene_queryparser_classic_CharStream_H

#include "java/lang/Object.h"

namespace java {
  namespace io {
    class IOException;
  }
  namespace lang {
    class String;
    class Class;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace queryparser {
        namespace classic {

          class CharStream : public ::java::lang::Object {
           public:
            enum {
              mid_BeginToken_cca3c0c6c25d243a,
              mid_Done_8e1955e8a9db094a,
              mid_GetImage_a59eabb26a802fa9,
              mid_GetSuffix_e4f3f8480b6d7637,
              mid_backup_36df8fa8e39fb5cc,
              mid_getBeginColumn_ebe7ab370a509c13,
              mid_getBeginLine_ebe7ab370a509c13,
              mid_getColumn_ebe7ab370a509c13,
              mid_getEndColumn_ebe7ab370a509c13,
              mid_getEndLine_ebe7ab370a509c13,
              mid_getLine_ebe7ab370a509c13,
              mid_readChar_cca3c0c6c25d243a,
              max_mid
            };

            static ::java::lang::Class *class$;
            static jmethodID *mids$;
            static bool live$;
            static jclass initializeClass(bool);

            explicit CharStream(jobject obj) : ::java::lang::Object(obj) {
              if (obj != NULL && mids$ == NULL)
                env->getClass(initializeClass);
            }
            CharStream(const CharStream& obj) : ::java::lang::Object(obj) {}

            jchar BeginToken() const;
            void Done() const;
            ::java::lang::String GetImage() const;
            JArray< jchar > GetSuffix(jint) const;
            void backup(jint) const;
            jint getBeginColumn() const;
            jint getBeginLine() const;
            jint getColumn() const;
            jint getEndColumn() const;
            jint getEndLine() const;
            jint getLine() const;
            jchar readChar() const;
          };
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace queryparser {
        namespace classic {
          extern PyType_Def PY_TYPE_DEF(CharStream);
          extern PyTypeObject *PY_TYPE(CharStream);

          class t_CharStream {
          public:
            PyObject_HEAD
            CharStream object;
            static PyObject *wrap_Object(const CharStream&);
            static PyObject *wrap_jobject(const jobject&);
            static void install(PyObject *module);
            static void initialize(PyObject *module);
          };
        }
      }
    }
  }
}

#endif
