#ifndef org_apache_lucene_search_FuzzyTermsEnum_H
#define org_apache_lucene_search_FuzzyTermsEnum_H

#include "org/apache/lucene/index/BaseTermsEnum.h"

namespace java {
  namespace io {
    class IOException;
  }
  namespace lang {
    class String;
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        class BytesRef;
        class AttributeSource;
        namespace automaton {
          class Automaton;
        }
      }
      namespace index {
        class TermState;
        class TermsEnum$SeekStatus;
        class ImpactsEnum;
        class Terms;
        class Term;
        class PostingsEnum;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {

        class FuzzyTermsEnum : public ::org::apache::lucene::index::BaseTermsEnum {
         public:
          enum {
            mid_init$_29f93e5a8450a4d5,
            mid_buildAutomaton_6eacff792fbbf1ff,
            mid_docFreq_ebe7ab370a509c13,
            mid_impacts_1ce95317fe74a9cc,
            mid_next_74802edf7c1e9c5f,
            mid_ord_e0866fd7ad03cc05,
            mid_postings_de59dff1c5033ba0,
            mid_seekCeil_0841de36aff472aa,
            mid_seekExact_be03181bd5347763,
            mid_seekExact_d89013dae69b2a92,
            mid_seekExact_653851e8c159dd2b,
            mid_term_74802edf7c1e9c5f,
            mid_termState_0f3591b55a488a45,
            mid_totalTermFreq_e0866fd7ad03cc05,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit FuzzyTermsEnum(jobject obj) : ::org::apache::lucene::index::BaseTermsEnum(obj) {
            if (obj != NULL && mids$ == NULL)
              env->getClass(initializeClass);
          }
          FuzzyTermsEnum(const FuzzyTermsEnum& obj) : ::org::apache::lucene::index::BaseTermsEnum(obj) {}

          FuzzyTermsEnum(const ::org::apache::lucene::index::Terms &, const ::org::apache::lucene::util::AttributeSource &, const ::org::apache::lucene::index::Term &, jint, jint, jboolean);

          static ::org::apache::lucene::util::automaton::Automaton buildAutomaton(const ::java::lang::String &, jint, jboolean, jint);
          jint docFreq() const;
          ::org::apache::lucene::index::ImpactsEnum impacts(jint) const;
          ::org::apache::lucene::util::BytesRef next() const;
          jlong ord() const;
          ::org::apache::lucene::index::PostingsEnum postings(const ::org::apache::lucene::index::PostingsEnum &, jint) const;
          ::org::apache::lucene::index::TermsEnum$SeekStatus seekCeil(const ::org::apache::lucene::util::BytesRef &) const;
          jboolean seekExact(const ::org::apache::lucene::util::BytesRef &) const;
          void seekExact(jlong) const;
          void seekExact(const ::org::apache::lucene::util::BytesRef &, const ::org::apache::lucene::index::TermState &) const;
          ::org::apache::lucene::util::BytesRef term() const;
          ::org::apache::lucene::index::TermState termState() const;
          jlong totalTermFreq() const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        extern PyType_Def PY_TYPE_DEF(FuzzyTermsEnum);
        extern PyTypeObject *PY_TYPE(FuzzyTermsEnum);

        class t_FuzzyTermsEnum {
        public:
          PyObject_HEAD
          FuzzyTermsEnum object;
          static PyObject *wrap_Object(const FuzzyTermsEnum&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
