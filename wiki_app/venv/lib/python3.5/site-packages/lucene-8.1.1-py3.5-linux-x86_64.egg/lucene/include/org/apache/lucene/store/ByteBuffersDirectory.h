#ifndef org_apache_lucene_store_ByteBuffersDirectory_H
#define org_apache_lucene_store_ByteBuffersDirectory_H

#include "org/apache/lucene/store/BaseDirectory.h"

namespace java {
  namespace io {
    class IOException;
  }
  namespace util {
    class Set;
    class Collection;
  }
  namespace lang {
    class String;
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace store {
        class LockFactory;
        class IndexOutput;
        class IndexInput;
        class IOContext;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace store {

        class ByteBuffersDirectory : public ::org::apache::lucene::store::BaseDirectory {
         public:
          enum {
            mid_init$_8e1955e8a9db094a,
            mid_init$_af528084c384bc34,
            mid_close_8e1955e8a9db094a,
            mid_createOutput_94b2e67f206b57ed,
            mid_createTempOutput_78e98f2631c4d77a,
            mid_deleteFile_f23cb8ed8bef391c,
            mid_fileLength_79a6610a57ccdd14,
            mid_getPendingDeletions_b47526fcab3b3190,
            mid_listAll_9b8eef6b66cbb903,
            mid_openInput_cf15a871472ca073,
            mid_rename_d0828f028d0b24e8,
            mid_sync_376407cf583ef774,
            mid_syncMetaData_8e1955e8a9db094a,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit ByteBuffersDirectory(jobject obj) : ::org::apache::lucene::store::BaseDirectory(obj) {
            if (obj != NULL && mids$ == NULL)
              env->getClass(initializeClass);
          }
          ByteBuffersDirectory(const ByteBuffersDirectory& obj) : ::org::apache::lucene::store::BaseDirectory(obj) {}

          ByteBuffersDirectory();
          ByteBuffersDirectory(const ::org::apache::lucene::store::LockFactory &);

          void close() const;
          ::org::apache::lucene::store::IndexOutput createOutput(const ::java::lang::String &, const ::org::apache::lucene::store::IOContext &) const;
          ::org::apache::lucene::store::IndexOutput createTempOutput(const ::java::lang::String &, const ::java::lang::String &, const ::org::apache::lucene::store::IOContext &) const;
          void deleteFile(const ::java::lang::String &) const;
          jlong fileLength(const ::java::lang::String &) const;
          ::java::util::Set getPendingDeletions() const;
          JArray< ::java::lang::String > listAll() const;
          ::org::apache::lucene::store::IndexInput openInput(const ::java::lang::String &, const ::org::apache::lucene::store::IOContext &) const;
          void rename(const ::java::lang::String &, const ::java::lang::String &) const;
          void sync(const ::java::util::Collection &) const;
          void syncMetaData() const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace store {
        extern PyType_Def PY_TYPE_DEF(ByteBuffersDirectory);
        extern PyTypeObject *PY_TYPE(ByteBuffersDirectory);

        class t_ByteBuffersDirectory {
        public:
          PyObject_HEAD
          ByteBuffersDirectory object;
          static PyObject *wrap_Object(const ByteBuffersDirectory&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
